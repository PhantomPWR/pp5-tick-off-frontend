[{"/workspace/pp5-tick-off-frontend/src/index.js":"1","/workspace/pp5-tick-off-frontend/src/reportWebVitals.js":"2","/workspace/pp5-tick-off-frontend/src/App.js":"3","/workspace/pp5-tick-off-frontend/src/contexts/ProfileDataContext.js":"4","/workspace/pp5-tick-off-frontend/src/contexts/CurrentUserContext.js":"5","/workspace/pp5-tick-off-frontend/src/api/axiosDefaults.js":"6","/workspace/pp5-tick-off-frontend/src/components/NavBar.js":"7","/workspace/pp5-tick-off-frontend/src/components/NotFound.js":"8","/workspace/pp5-tick-off-frontend/src/utils/utils.js":"9","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskList.js":"10","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskPage.js":"11","/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfilePage.js":"12","/workspace/pp5-tick-off-frontend/src/pages/auth/SignInForm.js":"13","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskEditForm.js":"14","/workspace/pp5-tick-off-frontend/src/pages/auth/SignUpForm.js":"15","/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileList.js":"16","/workspace/pp5-tick-off-frontend/src/pages/profiles/UsernameForm.js":"17","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskCreateForm.js":"18","/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileEditForm.js":"19","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryList.js":"20","/workspace/pp5-tick-off-frontend/src/pages/profiles/UserPasswordForm.js":"21","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryPage.js":"22","/workspace/pp5-tick-off-frontend/src/components/Avatar.js":"23","/workspace/pp5-tick-off-frontend/src/components/Asset.js":"24","/workspace/pp5-tick-off-frontend/src/components/SearchBar.js":"25","/workspace/pp5-tick-off-frontend/src/pages/tasks/Task.js":"26","/workspace/pp5-tick-off-frontend/src/pages/profiles/Profile.js":"27","/workspace/pp5-tick-off-frontend/src/components/MoreDropdown.js":"28","/workspace/pp5-tick-off-frontend/src/hooks/useClickOutsideToggle.js":"29","/workspace/pp5-tick-off-frontend/src/hooks/useRedirect.js":"30","/workspace/pp5-tick-off-frontend/src/pages/categories/Category.js":"31","/workspace/pp5-tick-off-frontend/src/pages/comments/CommentCreateForm.js":"32","/workspace/pp5-tick-off-frontend/src/pages/comments/Comment.js":"33","/workspace/pp5-tick-off-frontend/src/pages/comments/CommentEditForm.js":"34","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryCreateForm.js":"35","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryEditForm.js":"36","/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js":"37","/workspace/pp5-tick-off-frontend/src/components/TaskStatus.js":"38","/workspace/pp5-tick-off-frontend/src/components/APIConnectionCheck.js":"39"},{"size":905,"mtime":1692546317000,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1690476418000,"results":"42","hashOfConfig":"41"},{"size":3661,"mtime":1694683149000,"results":"43","hashOfConfig":"41"},{"size":1549,"mtime":1694766589000,"results":"44","hashOfConfig":"41"},{"size":2557,"mtime":1694766798000,"results":"45","hashOfConfig":"41"},{"size":437,"mtime":1694765986000,"results":"46","hashOfConfig":"41"},{"size":4148,"mtime":1694945758492,"results":"47","hashOfConfig":"41"},{"size":434,"mtime":1694948422813,"results":"48","hashOfConfig":"41"},{"size":910,"mtime":1690476418000,"results":"49","hashOfConfig":"41"},{"size":3502,"mtime":1694711847000,"results":"50","hashOfConfig":"41"},{"size":3048,"mtime":1694711447000,"results":"51","hashOfConfig":"41"},{"size":5892,"mtime":1694712733000,"results":"52","hashOfConfig":"41"},{"size":4215,"mtime":1694765146000,"results":"53","hashOfConfig":"41"},{"size":12985,"mtime":1694712115000,"results":"54","hashOfConfig":"41"},{"size":4269,"mtime":1694765091000,"results":"55","hashOfConfig":"41"},{"size":1205,"mtime":1694713012000,"results":"56","hashOfConfig":"41"},{"size":2852,"mtime":1694713978000,"results":"57","hashOfConfig":"41"},{"size":10893,"mtime":1694711827000,"results":"58","hashOfConfig":"41"},{"size":4382,"mtime":1693648490000,"results":"59","hashOfConfig":"41"},{"size":3469,"mtime":1694761872000,"results":"60","hashOfConfig":"41"},{"size":3471,"mtime":1694714360000,"results":"61","hashOfConfig":"41"},{"size":1128,"mtime":1694761222000,"results":"62","hashOfConfig":"41"},{"size":411,"mtime":1694948484889,"results":"63","hashOfConfig":"41"},{"size":470,"mtime":1694948563089,"results":"64","hashOfConfig":"41"},{"size":4475,"mtime":1694944631325,"results":"65","hashOfConfig":"41"},{"size":14116,"mtime":1694711345000,"results":"66","hashOfConfig":"41"},{"size":808,"mtime":1694712565000,"results":"67","hashOfConfig":"41"},{"size":2314,"mtime":1694948330237,"results":"68","hashOfConfig":"41"},{"size":683,"mtime":1694766444000,"results":"69","hashOfConfig":"41"},{"size":1032,"mtime":1694766366000,"results":"70","hashOfConfig":"41"},{"size":1568,"mtime":1694764288000,"results":"71","hashOfConfig":"41"},{"size":2145,"mtime":1694760694000,"results":"72","hashOfConfig":"41"},{"size":3074,"mtime":1694760294000,"results":"73","hashOfConfig":"41"},{"size":1946,"mtime":1694760880000,"results":"74","hashOfConfig":"41"},{"size":3378,"mtime":1694764816000,"results":"75","hashOfConfig":"41"},{"size":4064,"mtime":1694762979000,"results":"76","hashOfConfig":"41"},{"size":1727,"mtime":1694800027000,"results":"77","hashOfConfig":"41"},{"size":323,"mtime":1694366993000,"results":"78","hashOfConfig":"41"},{"size":762,"mtime":1694357225000,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"9z3io3",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/workspace/pp5-tick-off-frontend/src/index.js",[],["162","163"],"/workspace/pp5-tick-off-frontend/src/reportWebVitals.js",[],"/workspace/pp5-tick-off-frontend/src/App.js",[],"/workspace/pp5-tick-off-frontend/src/contexts/ProfileDataContext.js",[],"/workspace/pp5-tick-off-frontend/src/contexts/CurrentUserContext.js",[],"/workspace/pp5-tick-off-frontend/src/api/axiosDefaults.js",[],"/workspace/pp5-tick-off-frontend/src/components/NavBar.js",[],"/workspace/pp5-tick-off-frontend/src/components/NotFound.js",[],"/workspace/pp5-tick-off-frontend/src/utils/utils.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskList.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskPage.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfilePage.js",[],"/workspace/pp5-tick-off-frontend/src/pages/auth/SignInForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskEditForm.js",["164","165","166"],"// React library & hooks\nimport React, { useRef, useState, useEffect } from \"react\";\n\n// react-router-dom components for page navigation\nimport { useHistory, useParams } from \"react-router-dom\";\n\n// Custom hooks\nimport { useRedirect } from '../../hooks/useRedirect';\n\n// Axios library for HTTP requests\nimport axios from \"axios\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\n// Reusable components\nimport Asset from \"../../components/Asset\";\n\n// Bootstrap components\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Alert from \"react-bootstrap/Alert\";\n\n// Styles\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Assets\nimport Upload from \"../../assets/upload.png\";\n\n\nfunction TaskEditForm() {\n\n  // Set up state variables\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{'value': '', 'label': ''}]);\n  const [taskPriorityChoices, setTaskPriorityChoices] = useState([{'value': '', 'label': ''}]);\n  const [\n    taskCategoryChoices,\n    setTaskCategoryChoices\n  ] = useState([{'value': '', 'label': ''}]);\n  const [taskCategory, setTaskCategory] = useState([]);\n\n  // Fetch profiles from the API\n  useEffect(() => {\n    axios\n      .get(\"/profile-list/\")\n      .then((response) => setUsers(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n    // Fetch task category choices from the API\n    useEffect(() => {\n      const fetchTaskCategoryChoices = async () => {\n        try {\n          const response = await axiosReq.get('/category-choices/');\n          const categoryChoices = response.data.map(category => ({\n            key: category.id,\n            value: category.value,\n            label: category.label\n          }));\n          setTaskCategoryChoices(categoryChoices);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategoryChoices();\n    }, []);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axiosReq.get('/status-choices/');\n          setTaskStatusChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching task_status options:', error);\n        }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n  // Fetch task priority choices from the API\n  useEffect(() => {\n    const fetchTaskPriorityChoices = async () => {\n      try {\n        const response = await axiosReq.get('/priority-choices/');\n          setTaskPriorityChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching priority options:', error);\n        }\n    };\n    fetchTaskPriorityChoices();\n  }, []);\n\n  // taskData state variable\n  const [taskData, setTaskData] = useState({\n    title: '',\n    category: '',\n    description: '',\n    image: '',\n    task_status: '',\n    priority: '',\n    owner: '',\n    created_date: '',\n    due_date: null,\n    updated_date: '',\n    completed_date: '',\n    assigned_to: '',\n  });\n\n  // Destructure taskData\n  const {\n    title,\n    description,\n    image,\n    category,\n    task_status,\n    owner,\n    priority,\n    // due_date,\n    assigned_to,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const {id} = useParams();\n\n  // Populate due date field with existing due date\n  useEffect(() => {\n    setSelectedDate(taskData.due_date);\n  }, [taskData.due_date]);\n\n  // Fetch task data from the API\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/tasks/${id}/`);\n        const {\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner, \n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to, \n          is_owner\n        } = data;\n\n        // Redirect if user is not the owner of the task\n        // otherwise populate the form with the task data\n        is_owner ? setTaskData({\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner,\n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to,\n        }) : history.push('/');\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  // Fetch task categories from the API\n    useEffect(() => {\n      const fetchTaskCategory = async () => {\n        try {\n          const response = await axiosReq.get(`/categories/${category}`);\n          setTaskCategory(response.data.title);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategory();\n    }, []);\n\n  // Handle form input change\n  const handleChange = (event) => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle image upload\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  // Handle date change\n  const handleChangeDate = (event) => {\n    setSelectedDate(event.target.value);\n    setTaskData({\n      ...taskData,\n      due_date: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('category', taskData.category);\n    formData.append('description', description);\n    formData.append('task_status', taskData.task_status);\n    formData.append('priority', taskData.priority);\n    formData.append('owner', owner);\n    formData.append('due_date', selectedDate);\n    console.log('selectedDate', selectedDate);\n    formData.append('assigned_to', assigned_to);\n\n    if (imageInput?.current?.files[0]) {\n      formData.append('image', imageInput.current.files[0]);\n    }\n\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  // Form fields\n  const textFields = (\n    <div className=\"text-center\">\n      \n      {/* Title */}\n      <Form.Group>\n        <Form.Label>Task Title</Form.Label>\n        <Form.Control\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={handleChange}\n    />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Category */}\n      <Form.Group>\n        <Form.Label>Task Category</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"category\"\n          value={category}\n          onChange={handleChange}\n          aria-label=\"task category\"\n        >\n          <option value=\"\">Select task category</option>\n          {taskCategoryChoices.map((categoryChoice) => (\n            <option \n            key={categoryChoice.value} \n            value={categoryChoice.value}>\n              {categoryChoice.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.category?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Due Date */}\n      <Form.Group>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          id=\"dueDateInput\"\n          name=\"due_date\"\n          value={selectedDate}\n          onChange={handleChangeDate}\n        />\n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Description */}\n      <Form.Group>\n        <Form.Label>Task Description</Form.Label>\n        <Form.Control\n            as=\"textarea\"\n            rows={6}\n            name=\"description\"\n            value={description}\n            onChange={handleChange}\n        /> \n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Status */}\n      <Form.Group>\n        <Form.Label>Task Status</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"task_status\"\n          value={task_status}\n          onChange={handleChange}\n          aria-label=\"task status\"\n        >\n          <option value=\"\">Select task status</option>\n          {taskStatusChoices.map((statusChoice) => (\n            <option key={statusChoice.value} value={statusChoice.value}>{statusChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.task_status?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Priority */}\n      <Form.Group>\n        <Form.Label>Task Priority</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"priority\"\n          value={priority}\n          onChange={handleChange}\n          aria-label=\"task priority\"\n        >\n          <option value=\"\">Select task priority</option>\n          {taskPriorityChoices.map((priorityChoice) => (\n            <option key={priorityChoice.value} value={priorityChoice.value}>{priorityChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.priority?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Assigned to */}\n      <Form.Group>\n        <Form.Label>Assigned to</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"assigned_to\"\n          className={appStyles.Input}\n          value={assigned_to}\n          onChange={handleChange}\n          aria-label=\"assigned to\"\n        >\n          <option>Select a user</option>\n          {users.map((user) => (\n            \n            <option key={user.id} value={user.id}>\n              {user.username}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n\n      {errors?.owner?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n    \n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Orange}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Orange}`} type=\"submit\">\n        Update\n      </Button>\n    </div>\n  );\n\n  \n\n  return (\n\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col md={7} lg={7} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n        <Col className=\"py-2 p-0 p-md-2\" md={5} lg={5}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image ? (\n                <>\n                  <figure>\n                    <Image className={appStyles.Image} src={image} rounded />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Orange} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Replace image\n                    </Form.Label>\n                  </div>\n                </>\n              ) : (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset\n                    src={Upload}\n                    message=\"Click or tap to upload an image\"\n                  />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskEditForm;","/workspace/pp5-tick-off-frontend/src/pages/auth/SignUpForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileList.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/UsernameForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskCreateForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileEditForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryList.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/UserPasswordForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryPage.js",[],"/workspace/pp5-tick-off-frontend/src/components/Avatar.js",[],"/workspace/pp5-tick-off-frontend/src/components/Asset.js",[],"/workspace/pp5-tick-off-frontend/src/components/SearchBar.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/Task.js",["167"],"// React library & hooks\nimport React, { useState, useEffect } from \"react\";\n\n// Context hooks\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\n// react-router-dom components for page navigation\nimport { Link, useHistory } from \"react-router-dom\";\n\n// Axios library for HTTP requests\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../../api/axiosDefaults\";\n\n// Reusable components\nimport { MoreDropdown } from \"../../components/MoreDropdown\";\nimport TaskStatus from \"../../components/TaskStatus\";\nimport StatusUpdateForm from \"../../components/StatusUpdateForm\";\n\n// Bootstrap components\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Media from \"react-bootstrap/Media\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { response } from \"msw\";\n\n// Styles\nimport styles from \"../../styles/Task.module.css\";\n\n// Define priority choices\nconst priority_choices = {\n  PRIORITY1: \"High\",\n  PRIORITY2: \"Medium\",\n  PRIORITY3: \"Low\",\n};\n\nconst Task = (props) => {\n  // Destructure task props\n  const {\n    id,\n    owner,\n    assigned_to,\n    task_status,\n    priority,\n    category,\n    title,\n    description,\n    image,\n    created_date,\n    due_date,\n    completed_date,\n    comment_count,\n    taskPage,\n  } = props;\n\n  // Get current user from context\n  const currentUser = useCurrentUser();\n\n  // Check if current user is task owner\n  const is_owner = currentUser?.username === owner;\n\n  // Set up state variables\n  const [assignedUser, setAssignedUser] = useState(null);\n  const history = useHistory();\n  const [showModal, setShowModal] = useState(false);\n  const currentDate = new Date();\n  const isDueDateInPast = new Date(due_date).setHours(0,0,0,0) < currentDate.setHours(0,0,0,0);\n  const isDueDateToday =\n  new Date(due_date).toLocaleDateString() === currentDate.toLocaleDateString();\n\n  const [taskStatus, setTaskStatus] = useState(props.task_status);\n  const [showStatusUpdateForm, setShowStatusUpdateForm] = useState(true);\n  const [taskCategory, setTaskCategory] = useState([]);\n\n  // Handle task status update\n  const handleStatusUpdate = async (newStatus) => {\n    setTaskStatus(newStatus);\n    setShowStatusUpdateForm(newStatus !== 'COMPLETED');\n  };\n\n  // Open modal\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  // Handle task edit\n  const handleEdit = () => {\n    history.push(`/tasks/${id}/edit`);\n  };\n\n  // Handle task delete\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/tasks/${id}/`);\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n    // Fetch task categories from the API\n    useEffect(() => {\n      const fetchTaskCategory = async () => {\n        try {\n          const response = await axiosReq.get(`/categories/${category}`);\n          setTaskCategory(response.data.title);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategory();\n    }, [category]);\n  \n  // Fetch assigned user\n  useEffect(() => {\n    if (assigned_to) {\n      axios.get(`/profiles/${assigned_to}`).then((response) => {\n        setAssignedUser(response.data.owner);\n      });\n    } else {\n      setAssignedUser(\"No users assigned yet.\");\n    }\n  }, [assigned_to]);\n\n  return (\n    <Card className={styles.Task}>\n      <Card.Body className={styles.TaskBody}>\n        <Media className=\"align-items-center justify-content-between\">\n          {!taskPage ? (\n            /* Task List Header */\n            <Link to={`/tasks/${id}`}>\n              <Row className=\"row-cols-2 d-flex justify-content-between align-items-center\">\n                <Col className=\"text-start\">\n                  {title && (\n                    <Card.Title className={`fs-4 ${styles.TaskTitle}`}>{title}</Card.Title>\n                  )}\n                </Col>\n                <Col className=\"text-end\">\n                  {isDueDateInPast && task_status !== 'COMPLETED' && showStatusUpdateForm ? (\n                    <span className={`px-3 py-2 ${styles.StatusBadge} ${styles.OverDue}`}>\n                      Overdue{' '}\n                      {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                        day: \"2-digit\",\n                        month: \"short\",\n                        year: \"numeric\",\n                      })}\n                    </span>\n                  ) : isDueDateToday && task_status !== 'COMPLETED' && showStatusUpdateForm ? (\n                    <span className={`px-3 py-2 ${styles.StatusBadge} ${styles.DueToday}`}>\n                      Due Today{' '}\n                      {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                        day: \"2-digit\",\n                        month: \"short\",\n                        year: \"numeric\",\n                      })}\n                    </span>\n                  ) : task_status !== 'COMPLETED' ? (\n                    <span className={`px-3 py-2 ${styles.StatusBadge} ${styles.DueDate}`}>\n                      Due on{' '}\n                      {/* {due_date} */}\n                      {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                        day: \"2-digit\",\n                        month: \"short\",\n                        year: \"numeric\",\n                      })}\n                    </span>\n                  ) : task_status === 'COMPLETED' || taskStatus === 'COMPLETED' ? (\n                      <span className={`px-3 py-2 ${styles.StatusBadge} ${styles.Completed}`}>\n                        Completed on{' '}\n                        {new Date(completed_date).toLocaleDateString(\"en-GB\", {\n                          day: \"2-digit\",\n                          month: \"short\",\n                          year: \"numeric\",\n                        })}\n                      </span>\n\n                  ):null}\n                </Col>\n              </Row>\n            </Link>\n          ):null}\n          {/* Task Detail Header */}\n          <div className=\"row text-center\">\n             {taskPage && title && (\n                    <Card.Title className={`fs-4 mb-5 ${styles.TaskTitle}`}>{title}</Card.Title>\n                  )}\n          </div>\n          <div className=\"d-flex row-cols-4 justify-content-between align-items-center\">\n            {taskPage && (\n              <span className=\"col-md-3\">\n                Created<br />\n                {new Date(created_date).toLocaleDateString(\"en-GB\", {\n                    day: \"2-digit\",\n                    month: \"short\",\n                    year: \"numeric\",\n                  })}\n              </span>\n            )}\n            {taskPage && isDueDateInPast && task_status !== 'COMPLETED' && showStatusUpdateForm ? (\n              <span className={`col-md-3 ms-auto ${styles.StatusBadge} ${styles.OverDue}`}>\n                Overdue<br />\n                {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n              </span>\n            ) : taskPage && isDueDateToday && task_status !== 'COMPLETED' && showStatusUpdateForm ? (\n              <span className={`col-md-3 ms-auto ${styles.StatusBadge} ${styles.DueToday}`}>\n                Due Today<br />\n                {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n              </span>\n            ) : taskPage && task_status !== 'COMPLETED' ? (\n              <span className={`col-md-3 ms-auto ${styles.StatusBadge} ${styles.DueDate}`}>\n                Due on<br />\n                {/* {due_date} */}\n                {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n              </span>\n            ):null}\n            {task_status !== 'COMPLETED' && taskPage && showStatusUpdateForm ? (\n              <span className={`col-md-3 ms-auto`}>\n                <span>Update Task Status</span>\n                <StatusUpdateForm\n                  taskId={id}\n                  onUpdateStatus={handleStatusUpdate}\n                />\n              </span>\n            ) : (\n              <>\n              {taskPage && (task_status === 'COMPLETED' || taskStatus === 'COMPLETED') ? (\n                <span className={`col-md-3 ms-auto ${styles.StatusBadge} ${styles.Completed}`}>\n                  Completed on<br/>\n                  {new Date(completed_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n                </span>\n              ) : null}\n              </>\n            )}\n            <span className=\"col-1 d-flex justify-content-end\">\n              {is_owner && taskPage && (\n                <MoreDropdown\n                  handleEdit={handleEdit}\n                  handleDelete={handleDelete}\n                />\n              )}\n            </span>\n          </div>\n        </Media>\n      </Card.Body>\n\n      <Card.Body className={styles.TaskBody}>\n        {/* Task List Body */}\n        {!taskPage ? (\n          <Row className=\"row-cols-2\">\n            <Col className={`d-flex flex-column justify-content-center align-items-start ${styles.Meta}`}>\n              <div className={styles.MetaDetail}>\n                {/* Owner */}\n                <span className=\"me-1\">\n                  <i className=\"fas fa-crown\"/>\n                  {owner}\n                </span>\n              </div>\n              <div className={styles.MetaDetail}>\n                {/* Assigned User */}\n                <span className=\"me-1\">\n                  <i className=\"fas fa-user-check\"/>\n                  {assignedUser}\n                </span>\n              </div>\n              <div className={styles.MetaDetail}>\n                {/* Comment Count */}\n                <span className=\"me-1\">\n                  <i className=\"far fa-comments\" />\n                  {comment_count}\n                </span>\n              </div>\n            </Col>\n            <Col className={`d-flex flex-column justify-content-center align-items-end ${styles.Meta}`}>\n              <div className=\"d-flex flex-column align-items-start\">\n                <div className={styles.MetaDetail}>\n                  <span className=\"me-1\">\n                    <i className=\"fas fa-triangle-exclamation\"></i>\n                    {priority_choices[priority]}\n                  </span>\n                </div>\n                <div className={styles.MetaDetail}>\n                  {/* Task Status */}\n                  <span className=\"me-1\">\n                    <i className=\"fas fa-list-check\"></i>\n                    { !taskStatus ? (\n                      <TaskStatus taskStatus={task_status} />\n                    ) : (\n                      <TaskStatus taskStatus={taskStatus} />\n                    ) }\n                  </span>\n                </div>\n                <div className={styles.MetaDetail}>\n                  {/* Category */}\n                  <span className=\"me-1\">\n                    <i className=\"far fa-folder\" />\n                    {taskCategory}\n                  </span>\n              </div>\n              </div>\n            </Col>\n          </Row>\n        ) : (\n          // Task Detail Body\n          <>\n          <Card.Body className={!taskPage ? \"py-0\" : \"\"}>\n\n        <div className=\"row row-cols-1 row-cols-lg-4 justify-content-between\">\n          <div className=\"col col-lg-8\">\n            {taskPage && description && (\n              <Card.Text align={\"left\"}>{description}</Card.Text>\n            )}\n          </div>\n          {taskPage && (\n            <div className=\"col col-lg-2 text-center\">\n              <Card.Text className=\"d-flex align-items-center\">\n                <i className=\"fas fa-paperclip\"></i> Attachment\n              </Card.Text>\n              <Card.Img\n                src={image}\n                alt={title}\n                onClick={openModal}\n                className=\"w-50\n                 mx-auto\"\n              />\n              <Modal\n                show={showModal}\n                onHide={() => setShowModal(false)}\n                size=\"lg\"\n                closeVariant=\"black\"\n              >\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                  <Card.Img src={image} alt={title} />\n                </Modal.Body>\n              </Modal>\n            </div>\n          )}\n        </div>\n      </Card.Body>\n          <div className={styles.TaskBar}>\n            {/* Assigned User */}\n            <div align=\"center\">\n              <strong className=\"fw-bold\">Assigned to: </strong>\n              <div className=\"row\">\n                <p className=\"col-6\">\n                  <i className=\"fas fa-crown\"></i>\n                  {owner}\n                </p>\n                <p className=\"col-6\">\n                  <i className=\"fas fa-user-check\" />\n                  {assignedUser}\n                </p>\n              </div>\n            </div>\n            <div className=\"row row-cols-3 justify-content-between\">\n              {/* Category */}\n              <span className=\"col\">\n                <i className=\"far fa-folder\" />\n                Category: {taskCategory}\n              </span>\n\n              {/* Task Status */}\n              <span className=\"col\">\n                <span><i className=\"fas fa-list-check\"></i>Status:  </span>\n                { !taskStatus ? (\n                  <TaskStatus taskStatus={task_status} />\n                ) : (\n                  <TaskStatus taskStatus={taskStatus} />\n                ) }\n              </span>\n\n              {/* Priority */}\n              <span className=\"col\">\n                <i className=\"fas fa-triangle-exclamation\"></i>\n                Priority: {priority_choices[priority]}\n              </span>\n            </div>\n          </div>\n          </>\n        )}\n        \n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Task;\n","/workspace/pp5-tick-off-frontend/src/pages/profiles/Profile.js",[],"/workspace/pp5-tick-off-frontend/src/components/MoreDropdown.js",[],"/workspace/pp5-tick-off-frontend/src/hooks/useClickOutsideToggle.js",[],"/workspace/pp5-tick-off-frontend/src/hooks/useRedirect.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/Category.js",[],"/workspace/pp5-tick-off-frontend/src/pages/comments/CommentCreateForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/comments/Comment.js",[],"/workspace/pp5-tick-off-frontend/src/pages/comments/CommentEditForm.js",["168"],"// React library & hooks\nimport React, { useState } from \"react\";\n\n// Axios library for HTTP requests\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\n// Bootstrap components\nimport Form from \"react-bootstrap/Form\";\n\n// Styles\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\n\n\nfunction CommentEditForm(props) {\n\n  // State variables\n  const [formContent, setFormContent] = useState(content);\n\n  // Destructure props\n  const { id, content, setShowEditForm, setComments } = props;\n\n  // Handle change in comment content\n  const handleChange = (event) => {\n    setFormContent(event.target.value);\n  };\n\n  // Handle submit\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.put(`/comments/${id}/`, {\n        content: formContent.trim(),\n      });\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.map((comment) => {\n          return comment.id === id\n            ? {\n                ...comment,\n                content: formContent.trim(),\n                updated_at: \"now\",\n              }\n            : comment;\n        }),\n      }));\n      setShowEditForm(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"pe-1\">\n        <Form.Control\n          className={styles.Form}\n          as=\"textarea\"\n          value={formContent}\n          onChange={handleChange}\n          rows={2}\n        />\n      </Form.Group>\n      <div className=\"text-right\">\n        <button\n          className={styles.Button}\n          onClick={() => setShowEditForm(false)}\n          type=\"button\"\n        >\n          cancel\n        </button>\n        <button\n          className={styles.Button}\n          disabled={!content.trim()}\n          type=\"submit\"\n        >\n          save\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default CommentEditForm;","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryCreateForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryEditForm.js",[],"/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js",["169"],"/workspace/pp5-tick-off-frontend/src/components/TaskStatus.js",[],"/workspace/pp5-tick-off-frontend/src/components/APIConnectionCheck.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":21},{"ruleId":"174","severity":1,"message":"178","line":48,"column":10,"nodeType":"176","messageId":"177","endLine":48,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":196,"column":8,"nodeType":"181","endLine":196,"endColumn":10,"suggestions":"182"},{"ruleId":"174","severity":1,"message":"183","line":25,"column":10,"nodeType":"176","messageId":"177","endLine":25,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":17,"column":50,"nodeType":"176","messageId":"186","endLine":17,"endColumn":57},{"ruleId":"174","severity":1,"message":"187","line":22,"column":10,"nodeType":"176","messageId":"177","endLine":22,"endColumn":17},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'useRedirect' is defined but never used.","Identifier","unusedVar","'taskCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["190"],"'response' is defined but never used.","no-use-before-define","'content' was used before it was defined.","usedBeforeDefined","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [category]",{"range":"193","text":"194"},[5306,5308],"[category]"]