[{"/workspace/pp5-tick-off-frontend/src/index.js":"1","/workspace/pp5-tick-off-frontend/src/reportWebVitals.js":"2","/workspace/pp5-tick-off-frontend/src/App.js":"3","/workspace/pp5-tick-off-frontend/src/contexts/ProfileDataContext.js":"4","/workspace/pp5-tick-off-frontend/src/contexts/CurrentUserContext.js":"5","/workspace/pp5-tick-off-frontend/src/api/axiosDefaults.js":"6","/workspace/pp5-tick-off-frontend/src/components/NavBar.js":"7","/workspace/pp5-tick-off-frontend/src/components/NotFound.js":"8","/workspace/pp5-tick-off-frontend/src/utils/utils.js":"9","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskList.js":"10","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskPage.js":"11","/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfilePage.js":"12","/workspace/pp5-tick-off-frontend/src/pages/auth/SignInForm.js":"13","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskEditForm.js":"14","/workspace/pp5-tick-off-frontend/src/pages/auth/SignUpForm.js":"15","/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileList.js":"16","/workspace/pp5-tick-off-frontend/src/pages/profiles/UsernameForm.js":"17","/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskCreateForm.js":"18","/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileEditForm.js":"19","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryList.js":"20","/workspace/pp5-tick-off-frontend/src/pages/profiles/UserPasswordForm.js":"21","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryPage.js":"22","/workspace/pp5-tick-off-frontend/src/components/Avatar.js":"23","/workspace/pp5-tick-off-frontend/src/components/Asset.js":"24","/workspace/pp5-tick-off-frontend/src/components/SearchBar.js":"25","/workspace/pp5-tick-off-frontend/src/pages/tasks/Task.js":"26","/workspace/pp5-tick-off-frontend/src/pages/profiles/Profile.js":"27","/workspace/pp5-tick-off-frontend/src/components/MoreDropdown.js":"28","/workspace/pp5-tick-off-frontend/src/hooks/useClickOutsideToggle.js":"29","/workspace/pp5-tick-off-frontend/src/hooks/useRedirect.js":"30","/workspace/pp5-tick-off-frontend/src/pages/categories/Category.js":"31","/workspace/pp5-tick-off-frontend/src/pages/comments/CommentCreateForm.js":"32","/workspace/pp5-tick-off-frontend/src/pages/comments/Comment.js":"33","/workspace/pp5-tick-off-frontend/src/pages/comments/CommentEditForm.js":"34","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryCreateForm.js":"35","/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryEditForm.js":"36","/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js":"37","/workspace/pp5-tick-off-frontend/src/components/TaskStatus.js":"38"},{"size":905,"mtime":1692546317000,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1690476418000,"results":"41","hashOfConfig":"40"},{"size":3477,"mtime":1692036299000,"results":"42","hashOfConfig":"40"},{"size":1430,"mtime":1690476418000,"results":"43","hashOfConfig":"40"},{"size":2339,"mtime":1690476418000,"results":"44","hashOfConfig":"40"},{"size":382,"mtime":1691570310000,"results":"45","hashOfConfig":"40"},{"size":3647,"mtime":1693231469000,"results":"46","hashOfConfig":"40"},{"size":370,"mtime":1690476418000,"results":"47","hashOfConfig":"40"},{"size":910,"mtime":1690476418000,"results":"48","hashOfConfig":"40"},{"size":3650,"mtime":1693300384028,"results":"49","hashOfConfig":"40"},{"size":2592,"mtime":1690476418000,"results":"50","hashOfConfig":"40"},{"size":5417,"mtime":1691859588000,"results":"51","hashOfConfig":"40"},{"size":3546,"mtime":1690476418000,"results":"52","hashOfConfig":"40"},{"size":12112,"mtime":1692898266000,"results":"53","hashOfConfig":"40"},{"size":3815,"mtime":1690476418000,"results":"54","hashOfConfig":"40"},{"size":1085,"mtime":1690476418000,"results":"55","hashOfConfig":"40"},{"size":2402,"mtime":1690476418000,"results":"56","hashOfConfig":"40"},{"size":10261,"mtime":1691944899000,"results":"57","hashOfConfig":"40"},{"size":4376,"mtime":1690476418000,"results":"58","hashOfConfig":"40"},{"size":3187,"mtime":1692030815000,"results":"59","hashOfConfig":"40"},{"size":3022,"mtime":1690476418000,"results":"60","hashOfConfig":"40"},{"size":911,"mtime":1692031175000,"results":"61","hashOfConfig":"40"},{"size":383,"mtime":1693231645000,"results":"62","hashOfConfig":"40"},{"size":413,"mtime":1690476418000,"results":"63","hashOfConfig":"40"},{"size":4096,"mtime":1692952180000,"results":"64","hashOfConfig":"40"},{"size":8427,"mtime":1692897543000,"results":"65","hashOfConfig":"40"},{"size":709,"mtime":1691860023000,"results":"66","hashOfConfig":"40"},{"size":2161,"mtime":1690476418000,"results":"67","hashOfConfig":"40"},{"size":594,"mtime":1690476418000,"results":"68","hashOfConfig":"40"},{"size":868,"mtime":1690476418000,"results":"69","hashOfConfig":"40"},{"size":1715,"mtime":1692545996000,"results":"70","hashOfConfig":"40"},{"size":1870,"mtime":1690476418000,"results":"71","hashOfConfig":"40"},{"size":2808,"mtime":1692546006000,"results":"72","hashOfConfig":"40"},{"size":1748,"mtime":1690476418000,"results":"73","hashOfConfig":"40"},{"size":3139,"mtime":1692036789000,"results":"74","hashOfConfig":"40"},{"size":3557,"mtime":1692120091000,"results":"75","hashOfConfig":"40"},{"size":2007,"mtime":1692780990000,"results":"76","hashOfConfig":"40"},{"size":323,"mtime":1692534006000,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"9z3io3",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/workspace/pp5-tick-off-frontend/src/index.js",[],["158","159"],"/workspace/pp5-tick-off-frontend/src/reportWebVitals.js",[],"/workspace/pp5-tick-off-frontend/src/App.js",[],"/workspace/pp5-tick-off-frontend/src/contexts/ProfileDataContext.js",[],"/workspace/pp5-tick-off-frontend/src/contexts/CurrentUserContext.js",[],"/workspace/pp5-tick-off-frontend/src/api/axiosDefaults.js",[],"/workspace/pp5-tick-off-frontend/src/components/NavBar.js",[],"/workspace/pp5-tick-off-frontend/src/components/NotFound.js",[],"/workspace/pp5-tick-off-frontend/src/utils/utils.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskList.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskPage.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfilePage.js",[],"/workspace/pp5-tick-off-frontend/src/pages/auth/SignInForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskEditForm.js",["160","161"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Upload from \"../../assets/upload.png\";\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Asset from \"../../components/Asset\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Image,\n  Alert\n} from \"react-bootstrap\"\n\nfunction TaskEditForm() {\n\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{'value': '', 'label': ''}]);\n  const [taskPriorityChoices, setTaskPriorityChoices] = useState([{'value': '', 'label': ''}]);\n  const [\n    taskCategoryChoices,\n    setTaskCategoryChoices\n  ] = useState([{'value': '', 'label': ''}]);\n  const [taskCategory, setTaskCategory] = useState([]);\n\n  // Fetch profiles from the API\n  useEffect(() => {\n    axios\n      .get(\"/profile-list/\")\n      .then((response) => setUsers(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n    // Fetch task category choices from the API\n    useEffect(() => {\n      const fetchTaskCategoryChoices = async () => {\n        try {\n          const response = await axiosReq.get('/category-choices/');\n          const categoryChoices = response.data.map(category => ({\n            key: category.id,\n            value: category.value,\n            label: category.label\n          }));\n          setTaskCategoryChoices(categoryChoices);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategoryChoices();\n    }, []);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axiosReq.get('/status-choices/');\n          setTaskStatusChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching task_status options:', error);\n        }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n  // Fetch task priority choices from the API\n  useEffect(() => {\n    const fetchTaskPriorityChoices = async () => {\n      try {\n        const response = await axiosReq.get('/priority-choices/');\n          setTaskPriorityChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching priority options:', error);\n        }\n    };\n    fetchTaskPriorityChoices();\n  }, []);\n\n\n  const [taskData, setTaskData] = useState({\n    title: '',\n    category: '',\n    description: '',\n    image: '',\n    task_status: '',\n    priority: '',\n    owner: '',\n    created_date: '',\n    due_date: null,\n    updated_date: '',\n    completed_date: '',\n    assigned_to: '',\n  });\n\n  const {\n    title,\n    description,\n    image,\n    category,\n    task_status,\n    owner,\n    priority,\n    // due_date,\n    assigned_to,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const {id} = useParams();\n\n  // Populate due date field with existing due date\n  useEffect(() => {\n    setSelectedDate(taskData.due_date);\n  }, [taskData.due_date]);\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/tasks/${id}/`);\n        const {\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner, \n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to, \n          is_owner\n        } = data;\n\n        is_owner ? setTaskData({\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner,\n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to,\n        }) : history.push('/');\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  // Fetch task categories from the API\n    useEffect(() => {\n      const fetchTaskCategory = async () => {\n        try {\n          const response = await axiosReq.get(`/categories/${category}`);\n          setTaskCategory(response.data.title);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategory();\n    }, []);\n\n  const handleChange = (event) => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n\n  const handleChangeDate = (event) => {\n    setSelectedDate(event.target.value);\n    setTaskData({\n      ...taskData,\n      due_date: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('category', taskData.category);\n    formData.append('description', description);\n    formData.append('task_status', taskData.task_status);\n    formData.append('priority', taskData.priority);\n    formData.append('owner', owner);\n    formData.append('due_date', selectedDate);\n    console.log('selectedDate', selectedDate);\n    formData.append('assigned_to', assigned_to);\n\n    if (imageInput?.current?.files[0]) {\n      formData.append('image', imageInput.current.files[0]);\n    }\n\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n\n  const textFields = (\n    <div className=\"text-center\">\n      \n      {/* Title */}\n      <Form.Group>\n        <Form.Label>Task Title</Form.Label>\n        <Form.Control\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={handleChange}\n    />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Category */}\n      <Form.Group>\n        <Form.Label>Task Category</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"category\"\n          value={category}\n          onChange={handleChange}\n          aria-label=\"task category\"\n        >\n          <option value=\"\">Select task category</option>\n          {taskCategoryChoices.map((categoryChoice) => (\n            <option \n            key={categoryChoice.value} \n            value={categoryChoice.value}>\n              {categoryChoice.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.category?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Due Date */}\n      <Form.Group>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          id=\"dueDateInput\"\n          name=\"due_date\"\n          value={selectedDate}\n          onChange={handleChangeDate}\n        />\n\n\n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Description */}\n      <Form.Group>\n        <Form.Label>Task Description</Form.Label>\n        <Form.Control\n            as=\"textarea\"\n            rows={6}\n            name=\"description\"\n            value={description}\n            onChange={handleChange}\n        /> \n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Status */}\n      <Form.Group>\n        <Form.Label>Task Status</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"task_status\"\n          value={task_status}\n          onChange={handleChange}\n          aria-label=\"task status\"\n        >\n          <option value=\"\">Select task status</option>\n          {taskStatusChoices.map((statusChoice) => (\n            <option key={statusChoice.value} value={statusChoice.value}>{statusChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.task_status?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Priority */}\n      <Form.Group>\n        <Form.Label>Task Priority</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"priority\"\n          value={priority}\n          onChange={handleChange}\n          aria-label=\"task priority\"\n        >\n          <option value=\"\">Select task priority</option>\n          {taskPriorityChoices.map((priorityChoice) => (\n            <option key={priorityChoice.value} value={priorityChoice.value}>{priorityChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.priority?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Assigned to */}\n      <Form.Group>\n        <Form.Label>Assigned to</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"assigned_to\"\n          className={appStyles.Input}\n          value={assigned_to}\n          onChange={handleChange}\n          aria-label=\"assigned to\"\n        >\n          <option>Select a user</option>\n          {users.map((user) => (\n            \n            <option key={user.id} value={user.id}>\n              {user.username}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n\n      {errors?.owner?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n    \n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Blue}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Blue}`} type=\"submit\">\n        Update\n      </Button>\n    </div>\n  );\n\n  \n\n  return (\n\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col md={7} lg={7} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n        <Col className=\"py-2 p-0 p-md-2\" md={5} lg={5}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image ? (\n                <>\n                  <figure>\n                    <Image className={appStyles.Image} src={image} rounded />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Blue} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Replace image\n                    </Form.Label>\n                  </div>\n                </>\n              ) : (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset\n                    src={Upload}\n                    message=\"Click or tap to upload an image\"\n                  />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskEditForm;","/workspace/pp5-tick-off-frontend/src/pages/auth/SignUpForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileList.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/UsernameForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskCreateForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/ProfileEditForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryList.js",[],"/workspace/pp5-tick-off-frontend/src/pages/profiles/UserPasswordForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryPage.js",[],"/workspace/pp5-tick-off-frontend/src/components/Avatar.js",[],"/workspace/pp5-tick-off-frontend/src/components/Asset.js",[],"/workspace/pp5-tick-off-frontend/src/components/SearchBar.js",[],"/workspace/pp5-tick-off-frontend/src/pages/tasks/Task.js",["162"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"../../styles/Task.module.css\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MoreDropdown } from \"../../components/MoreDropdown\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../../api/axiosDefaults\";\nimport StatusUpdateForm from \"../../components/StatusUpdateForm\";\nimport TaskStatus from \"../../components/TaskStatus\";\nimport { Card, Media, Modal } from \"react-bootstrap\";\nimport { response } from \"msw\";\n\n\nconst priority_choices = {\n  PRIORITY1: \"1\",\n  PRIORITY2: \"2\",\n  PRIORITY3: \"3\",\n};\n\nconst Task = (props) => {\n  const {\n    id,\n    owner,\n    assigned_to,\n    task_status,\n    priority,\n    category,\n    title,\n    description,\n    image,\n    created_date,\n    due_date,\n    completed_date,\n    comment_count,\n    taskPage,\n\n  } = props;\n\n  const [taskStatus, setTaskStatus] = useState(props.task_status);\n  const [showStatusUpdateForm, setShowStatusUpdateForm] = useState(true);\n  const [taskCategory, setTaskCategory] = useState([]);\n  const handleStatusUpdate = async (newStatus) => {\n    setTaskStatus(newStatus);\n    setShowStatusUpdateForm(newStatus !== 'COMPLETED');\n  };\n\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n  const [assignedUser, setAssignedUser] = useState(null);\n  const history = useHistory();\n  const [showModal, setShowModal] = useState(false);\n  const currentDate = new Date();\n  // const dueDate = due_date;\n  const isDueDateInPast = new Date(due_date) < currentDate;\n  const isDueDateToday =\n    new Date(due_date) === currentDate;\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const handleEdit = () => {\n    history.push(`/tasks/${id}/edit`);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/tasks/${id}/`);\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n    // Fetch task categories from the API\n    useEffect(() => {\n      const fetchTaskCategory = async () => {\n        try {\n          const response = await axiosReq.get(`/categories/${category}`);\n          setTaskCategory(response.data.title);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategory();\n    }, [category]);\n    \n  useEffect(() => {\n    if (assigned_to) {\n      axios.get(`/profiles/${assigned_to}`).then((response) => {\n        setAssignedUser(response.data.owner);\n      });\n    } else {\n      setAssignedUser(\"No users assigned yet.\");\n    }\n  }, [assigned_to]);\n\n  return (\n    <Card className={styles.Task}>\n      <Card.Body className={styles.TaskBody}>\n        <Media className=\"align-items-center justify-content-between\">\n          <Link to={`/tasks/${id}`}>\n            {title && (\n              <Card.Title className=\"fs-4 text-center\">{title}</Card.Title>\n            )}\n          </Link>\n          <div className=\"d-flex row-cols-4 justify-content-between align-items-center\">\n            <span className=\"col-md-3\">\n              Created<br />\n              {new Date(created_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n            </span>\n            {isDueDateInPast && task_status !== 'COMPLETED' && showStatusUpdateForm ? (\n              <span className={`col-md-3 ms-auto ${styles.OverDue}`}>\n                Overdue<br />\n                {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n              </span>\n            ) : isDueDateToday && task_status !== 'COMPLETED' && showStatusUpdateForm ? (\n              <span className={`col-md-3 ms-auto ${styles.DueToday}`}>\n                Due Today<br />\n                {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n              </span>\n            ) : (\n              <span className=\"col-md-3 ms-auto\">\n                Due on<br />\n                {/* {due_date} */}\n                {new Date(due_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n              </span>\n            )}\n            {task_status !== 'COMPLETED' && taskPage && showStatusUpdateForm ? (\n              <span className={`col-md-3 ms-auto`}>\n                <span>Update Task Status</span>\n                <StatusUpdateForm\n                  taskId={id}\n                  onUpdateStatus={handleStatusUpdate}\n                />\n              </span>\n            ) : (\n              <>\n              {task_status === 'COMPLETED' || taskStatus === 'COMPLETED' ? (\n                <span className={`col-md-3 ms-auto ${styles.Completed}`}>\n                  Completed on<br/>\n                  {new Date(completed_date).toLocaleDateString(\"en-GB\", {\n                  day: \"2-digit\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })}\n                </span>\n              ) : null}\n              </>\n            )}\n            <span className=\"col-1 d-flex justify-content-end\">\n              {is_owner && taskPage && (\n                <MoreDropdown\n                  handleEdit={handleEdit}\n                  handleDelete={handleDelete}\n                />\n              )}\n            </span>\n          </div>\n        </Media>\n      </Card.Body>\n\n      <Card.Body className={styles.TaskBody}>\n        <div className={styles.TaskBar}>\n          {/* Assigned User */}\n          <div align=\"center\">\n            <strong className=\"fw-bold\">Assigned to: </strong>\n            <div className=\"row\">\n              <p className=\"col-6\">\n                <i className=\"fas fa-crown\"></i>\n                {owner}\n              </p>\n              <p className=\"col-6\">\n                <i className=\"fas fa-user-check\" />\n                {assignedUser}\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            {/* Category */}\n            <span className=\"col-md-3\">\n              <i className=\"far fa-folder\" />\n              Category: {taskCategory}\n            </span>\n\n            {/* Task Status */}\n            <span className=\"col-md-3\">\n              <span><i className=\"fas fa-list-check\"></i>Status:  </span>\n              { !taskStatus ? (\n                <TaskStatus taskStatus={task_status} />\n              ) : (\n                <TaskStatus taskStatus={taskStatus} />\n              ) }\n            </span>\n\n            {/* Priority */}\n            <span className=\"col-md-3\">\n              <i className=\"fas fa-triangle-exclamation\"></i>\n              Priority: {priority_choices[priority]}\n            </span>\n\n            {/* Comment Count */}\n            <span className=\"col-md-3\">\n              <i className=\"far fa-comments\" />\n              Comments: {comment_count}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n      <Card.Body>\n        <div className=\"row row-cols-1 row-cols-lg-4 justify-content-between\">\n          <div className=\"col col-lg-8\">\n            {description && (\n              <Card.Text align={\"left\"}>{description}</Card.Text>\n            )}\n          </div>\n          {taskPage && (\n            <div className=\"col col-lg-2 text-center\">\n              <Card.Text className=\"d-flex align-items-center\">\n                <i className=\"fas fa-paperclip\"></i> Attachment\n              </Card.Text>\n              <Card.Img\n                src={image}\n                alt={title}\n                onClick={openModal}\n                className=\"w-50\n                 mx-auto\"\n              />\n              <Modal\n                show={showModal}\n                onHide={() => setShowModal(false)}\n                size=\"lg\"\n                closeVariant=\"black\"\n              >\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                  <Card.Img src={image} alt={title} />\n                </Modal.Body>\n              </Modal>\n            </div>\n          )}\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Task;\n","/workspace/pp5-tick-off-frontend/src/pages/profiles/Profile.js",[],"/workspace/pp5-tick-off-frontend/src/components/MoreDropdown.js",[],"/workspace/pp5-tick-off-frontend/src/hooks/useClickOutsideToggle.js",[],"/workspace/pp5-tick-off-frontend/src/hooks/useRedirect.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/Category.js",[],"/workspace/pp5-tick-off-frontend/src/pages/comments/CommentCreateForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/comments/Comment.js",[],"/workspace/pp5-tick-off-frontend/src/pages/comments/CommentEditForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryCreateForm.js",[],"/workspace/pp5-tick-off-frontend/src/pages/categories/CategoryEditForm.js",[],"/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js",["163","164"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nimport axios from \"axios\";\n\nconst status_choices = {\n  BACKLOG: \"Backlog\",\n  TODO: \"To Do\",\n  INPROGRESS: \"In Progress\",\n  COMPLETED: \"Completed\",\n};\n\nconst StatusUpdateForm = ({ taskId, currentStatus, onUpdateStatus }) => {\n  const [newStatus, setNewStatus] = useState(currentStatus);\n  const [loading, setLoading] = useState(false);\n\n  const handleStatusChange = (e) => {\n    setNewStatus(e.target.value);\n  };\n\n  const submitForm = useCallback(async () => {\n    setLoading(true);\n    try {\n      await axios.patch(`/tasks/${taskId}/`, { task_status: newStatus });\n      onUpdateStatus(newStatus);\n    } catch (err) {\n      // Handle error\n    }\n    setLoading(false);\n  }, [taskId, newStatus, onUpdateStatus]);\n\n  // useEffect(() => {\n  //   if (newStatus !== currentStatus && newStatus !== \"\") {\n  //     submitForm();\n  //   }\n  // }, [newStatus, currentStatus, submitForm]);\n\n  useEffect(() => {\n  let cancelRequest = false;\n\n  const submitForm = async () => {\n    setLoading(true);\n    try {\n      await axios.patch(`/tasks/${taskId}/`, { task_status: newStatus });\n      if (!cancelRequest) {\n        onUpdateStatus(newStatus);\n      }\n    } catch (err) {\n      // Handle error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (newStatus !== currentStatus && newStatus !== \"\") {\n    submitForm();\n  }\n\n  return () => {\n    cancelRequest = true;\n  };\n}, [newStatus, currentStatus, onUpdateStatus, taskId]);\n\n\n  return (\n    <Form>\n      <div className=\"form-group\">\n        <select className=\"form-control text-center\" value={newStatus} onChange={handleStatusChange}>\n          <option value=\"\">Select status</option>\n          {Object.keys(status_choices).map((status) => (\n            <option key={status} value={status}>\n              {status_choices[status]}\n            </option>\n          ))}\n        </select>\n      </div>\n    </Form>\n  );\n};\n\nexport default StatusUpdateForm;\n","/workspace/pp5-tick-off-frontend/src/components/TaskStatus.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":31,"column":10,"nodeType":"171","messageId":"172","endLine":31,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":174,"column":8,"nodeType":"175","endLine":174,"endColumn":10,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"177","line":11,"column":10,"nodeType":"171","messageId":"172","endLine":11,"endColumn":18},{"ruleId":"169","severity":1,"message":"178","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":17},{"ruleId":"169","severity":1,"message":"179","line":21,"column":9,"nodeType":"171","messageId":"172","endLine":21,"endColumn":19},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'taskCategory' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'response' is defined but never used.","'loading' is assigned a value but never used.","'submitForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [category]",{"range":"185","text":"186"},[4559,4561],"[category]"]