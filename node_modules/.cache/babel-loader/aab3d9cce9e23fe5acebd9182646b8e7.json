{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js\",\n  _s = $RefreshSig$();\n// React library & hooks\nimport React, { useState, useEffect } from \"react\";\n\n// Axios library for HTTP requests\nimport axios from \"axios\";\n\n// Reusable components\nimport TaskStatus from \"./TaskStatus\";\n\n// Bootstrap components\nimport Form from 'react-bootstrap/Form';\n\n// Styles\nimport styles from \"../styles/StatusUpdateForm.module.css\";\n\n// const status_choices = {\n//   BACKLOG: \"Backlog\",\n//   TODO: \"To Do\",\n//   INPROGRESS: \"In Progress\",\n//   COMPLETED: \"Completed\",\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusUpdateForm = _ref => {\n  _s();\n  let {\n    taskId,\n    currentStatus,\n    onUpdateStatus\n  } = _ref;\n  const [newStatus, setNewStatus] = useState(currentStatus);\n  const [loading, setLoading] = useState(false);\n  const handleStatusChange = e => {\n    setNewStatus(e.target.value);\n  };\n  useEffect(() => {\n    let cancelRequest = false;\n    const submitForm = async () => {\n      setLoading(true);\n      try {\n        await axios.patch(`/tasks/${taskId}/`, {\n          task_status: newStatus\n        });\n        if (!cancelRequest) {\n          onUpdateStatus(newStatus);\n        }\n      } catch (err) {\n        // Handle error\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (newStatus !== currentStatus && newStatus !== \"\") {\n      submitForm();\n    }\n    return () => {\n      cancelRequest = true;\n    };\n  }, [newStatus, currentStatus, onUpdateStatus, taskId]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: `form-select ${styles.Select}`,\n        value: newStatus,\n        onChange: handleStatusChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), Object.keys(status_choices).map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: status,\n          children: /*#__PURE__*/_jsxDEV(TaskStatus, {\n            taskStatus: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusUpdateForm, \"BPpd4wiKfnNKpMJ4h75I0ZidA3w=\");\n_c = StatusUpdateForm;\nexport default StatusUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"StatusUpdateForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskStatus","Form","styles","jsxDEV","_jsxDEV","StatusUpdateForm","_ref","_s","taskId","currentStatus","onUpdateStatus","newStatus","setNewStatus","loading","setLoading","handleStatusChange","e","target","value","cancelRequest","submitForm","patch","task_status","err","children","className","Select","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","status_choices","map","status","taskStatus","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js"],"sourcesContent":["// React library & hooks\nimport React, {useState, useEffect} from \"react\";\n\n// Axios library for HTTP requests\nimport axios from \"axios\";\n\n// Reusable components\nimport TaskStatus from \"./TaskStatus\";\n\n// Bootstrap components\nimport Form from 'react-bootstrap/Form';\n\n// Styles\nimport styles from \"../styles/StatusUpdateForm.module.css\";\n\n// const status_choices = {\n//   BACKLOG: \"Backlog\",\n//   TODO: \"To Do\",\n//   INPROGRESS: \"In Progress\",\n//   COMPLETED: \"Completed\",\n// };\n\nconst StatusUpdateForm = ({ taskId, currentStatus, onUpdateStatus }) => {\n  const [newStatus, setNewStatus] = useState(currentStatus);\n  const [loading, setLoading] = useState(false);\n\n  const handleStatusChange = (e) => {\n    setNewStatus(e.target.value);\n  };\n\n  useEffect(() => {\n    let cancelRequest = false;\n\n    const submitForm = async () => {\n      setLoading(true);\n      try {\n        await axios.patch(`/tasks/${taskId}/`, { task_status: newStatus });\n        if (!cancelRequest) {\n          onUpdateStatus(newStatus);\n        }\n      } catch (err) {\n        // Handle error\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (newStatus !== currentStatus && newStatus !== \"\") {\n      submitForm();\n    }\n\n    return () => {\n      cancelRequest = true;\n    };\n  }, [newStatus, currentStatus, onUpdateStatus, taskId]);\n\n  return (\n    <Form>\n      <div className=\"form-group\">\n        <select className={`form-select ${styles.Select}`} value={newStatus} onChange={handleStatusChange}>\n          <option value=\"\">Select status</option>\n          {Object.keys(status_choices).map((status) => (\n            <option key={status} value={status}>\n              {/* {status_choices[status]} */}\n              <TaskStatus taskStatus={status} />\n            </option>\n          ))}\n        </select>\n      </div>\n    </Form>\n  );\n};\n\nexport default StatusUpdateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}