{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskEditForm.js\",\n  _s = $RefreshSig$();\n// React library & hooks\nimport React, { useRef, useState, useEffect } from \"react\";\n\n// react-router-dom components for page navigation\nimport { useHistory, useParams } from \"react-router-dom\";\n\n// Custom hooks\nimport { useRedirect } from '../../hooks/useRedirect';\n\n// Axios library for HTTP requests\nimport axios from \"axios\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\n// Reusable components\nimport Asset from \"../../components/Asset\";\n\n// Bootstrap components\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Alert from \"react-bootstrap/Alert\";\n\n// Styles\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Assets\nimport Upload from \"../../assets/upload.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskEditForm() {\n  _s();\n  var _errors$title, _errors$category, _errors$description, _errors$description2, _errors$task_status, _errors$priority, _errors$owner;\n  // Set up state variables\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{\n    'value': '',\n    'label': ''\n  }]);\n  const [taskPriorityChoices, setTaskPriorityChoices] = useState([{\n    'value': '',\n    'label': ''\n  }]);\n  const [taskCategoryChoices, setTaskCategoryChoices] = useState([{\n    'value': '',\n    'label': ''\n  }]);\n  const [taskCategory, setTaskCategory] = useState([]);\n\n  // Fetch profiles from the API\n  useEffect(() => {\n    axios.get(\"/profile-list/\").then(response => setUsers(response.data)).catch(error => console.log(error));\n  }, []);\n\n  // Fetch task category choices from the API\n  useEffect(() => {\n    const fetchTaskCategoryChoices = async () => {\n      try {\n        const response = await axiosReq.get('/category-choices/');\n        const categoryChoices = response.data.map(category => ({\n          key: category.id,\n          value: category.value,\n          label: category.label\n        }));\n        setTaskCategoryChoices(categoryChoices);\n      } catch (error) {\n        console.error('Error fetching category options:', error);\n      }\n    };\n    fetchTaskCategoryChoices();\n  }, []);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axiosReq.get('/status-choices/');\n        setTaskStatusChoices(response.data);\n      } catch (error) {\n        console.error('Error fetching task_status options:', error);\n      }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n  // Fetch task priority choices from the API\n  useEffect(() => {\n    const fetchTaskPriorityChoices = async () => {\n      try {\n        const response = await axiosReq.get('/priority-choices/');\n        setTaskPriorityChoices(response.data);\n      } catch (error) {\n        console.error('Error fetching priority options:', error);\n      }\n    };\n    fetchTaskPriorityChoices();\n  }, []);\n  const [taskData, setTaskData] = useState({\n    title: '',\n    category: '',\n    description: '',\n    image: '',\n    task_status: '',\n    priority: '',\n    owner: '',\n    created_date: '',\n    due_date: null,\n    updated_date: '',\n    completed_date: '',\n    assigned_to: ''\n  });\n  const {\n    title,\n    description,\n    image,\n    category,\n    task_status,\n    owner,\n    priority,\n    // due_date,\n    assigned_to\n  } = taskData;\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n\n  // Populate due date field with existing due date\n  useEffect(() => {\n    setSelectedDate(taskData.due_date);\n  }, [taskData.due_date]);\n\n  // Fetch task data from the API\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const {\n          data\n        } = await axiosReq.get(`/tasks/${id}/`);\n        const {\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner,\n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to,\n          is_owner\n        } = data;\n\n        // Redirect if user is not the owner of the task\n        // otherwise populate the form with the task data\n        is_owner ? setTaskData({\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner,\n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to\n        }) : history.push('/');\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, id]);\n\n  // Fetch task categories from the API\n  useEffect(() => {\n    const fetchTaskCategory = async () => {\n      try {\n        const response = await axiosReq.get(`/categories/${category}`);\n        setTaskCategory(response.data.title);\n      } catch (error) {\n        console.error('Error fetching category options:', error);\n      }\n    };\n    fetchTaskCategory();\n  }, []);\n\n  // Handle form input change\n  const handleChange = event => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleChangeImage = event => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0])\n      });\n    }\n  };\n\n  // Handle date change\n  const handleChangeDate = event => {\n    setSelectedDate(event.target.value);\n    setTaskData({\n      ...taskData,\n      due_date: event.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    var _imageInput$current;\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('category', taskData.category);\n    formData.append('description', description);\n    formData.append('task_status', taskData.task_status);\n    formData.append('priority', taskData.priority);\n    formData.append('owner', owner);\n    formData.append('due_date', selectedDate);\n    console.log('selectedDate', selectedDate);\n    formData.append('assigned_to', assigned_to);\n    if (imageInput !== null && imageInput !== void 0 && (_imageInput$current = imageInput.current) !== null && _imageInput$current !== void 0 && _imageInput$current.files[0]) {\n      formData.append('image', imageInput.current.files[0]);\n    }\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      var _err$response;\n      // console.log(err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401) {\n        var _err$response2;\n        setErrors((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      }\n    }\n  };\n\n  // Form fields\n  const textFields = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"category\",\n        value: category,\n        onChange: handleChange,\n        \"aria-label\": \"task category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), taskCategoryChoices.map(categoryChoice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: categoryChoice.value,\n          children: categoryChoice.label\n        }, categoryChoice.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        id: \"dueDateInput\",\n        name: \"due_date\",\n        value: selectedDate,\n        onChange: handleChangeDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 6,\n        name: \"description\",\n        value: description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$description2 = errors.description) === null || _errors$description2 === void 0 ? void 0 : _errors$description2.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"task_status\",\n        value: task_status,\n        onChange: handleChange,\n        \"aria-label\": \"task status\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), taskStatusChoices.map(statusChoice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: statusChoice.value,\n          children: statusChoice.label\n        }, statusChoice.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$task_status = errors.task_status) === null || _errors$task_status === void 0 ? void 0 : _errors$task_status.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"priority\",\n        value: priority,\n        onChange: handleChange,\n        \"aria-label\": \"task priority\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), taskPriorityChoices.map(priorityChoice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: priorityChoice.value,\n          children: priorityChoice.label\n        }, priorityChoice.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$priority = errors.priority) === null || _errors$priority === void 0 ? void 0 : _errors$priority.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Assigned to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"assigned_to\",\n        className: appStyles.Input,\n        value: assigned_to,\n        onChange: handleChange,\n        \"aria-label\": \"assigned to\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select a user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$owner = errors.owner) === null || _errors$owner === void 0 ? void 0 : _errors$owner.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Orange}`,\n      onClick: () => history.goBack(),\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Orange}`,\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        lg: 7,\n        className: \"d-none d-md-block p-0 p-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: appStyles.Content,\n          children: textFields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"py-2 p-0 p-md-2\",\n        md: 5,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: `${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"text-center\",\n            children: [image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  className: appStyles.Image,\n                  src: image,\n                  rounded: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: `${btnStyles.Button} ${btnStyles.Orange} btn`,\n                  htmlFor: \"image-upload\",\n                  children: \"Replace image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"d-flex justify-content-center\",\n              htmlFor: \"image-upload\",\n              children: /*#__PURE__*/_jsxDEV(Asset, {\n                src: Upload,\n                message: \"Click or tap to upload an image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"image-upload\",\n              accept: \"image/*\",\n              onChange: handleChangeImage,\n              ref: imageInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-md-none\",\n            children: textFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskEditForm, \"2vvF62bwabKYY046q9BtAggX+zQ=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = TaskEditForm;\nexport default TaskEditForm;\nvar _c;\n$RefreshReg$(_c, \"TaskEditForm\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useHistory","useParams","useRedirect","axios","axiosReq","Asset","Container","Row","Col","Form","Button","Image","Alert","appStyles","btnStyles","styles","Upload","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskEditForm","_s","_errors$title","_errors$category","_errors$description","_errors$description2","_errors$task_status","_errors$priority","_errors$owner","errors","setErrors","users","setUsers","selectedDate","setSelectedDate","taskStatusChoices","setTaskStatusChoices","taskPriorityChoices","setTaskPriorityChoices","taskCategoryChoices","setTaskCategoryChoices","taskCategory","setTaskCategory","get","then","response","data","catch","error","console","log","fetchTaskCategoryChoices","categoryChoices","map","category","key","id","value","label","fetchTaskStatusChoices","fetchTaskPriorityChoices","taskData","setTaskData","title","description","image","task_status","priority","owner","created_date","due_date","updated_date","completed_date","assigned_to","imageInput","history","handleMount","owner_comments","is_owner","push","err","fetchTaskCategory","handleChange","event","target","name","handleChangeImage","files","length","URL","revokeObjectURL","createObjectURL","handleChangeDate","handleSubmit","_imageInput$current","preventDefault","formData","FormData","append","current","put","_err$response","status","_err$response2","textFields","className","children","Group","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","message","idx","variant","as","categoryChoice","rows","statusChoice","priorityChoice","Input","user","username","Orange","onClick","goBack","onSubmit","md","lg","Content","src","rounded","htmlFor","File","accept","ref","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskEditForm.js"],"sourcesContent":["// React library & hooks\nimport React, { useRef, useState, useEffect } from \"react\";\n\n// react-router-dom components for page navigation\nimport { useHistory, useParams } from \"react-router-dom\";\n\n// Custom hooks\nimport { useRedirect } from '../../hooks/useRedirect';\n\n// Axios library for HTTP requests\nimport axios from \"axios\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\n// Reusable components\nimport Asset from \"../../components/Asset\";\n\n// Bootstrap components\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Alert from \"react-bootstrap/Alert\";\n\n// Styles\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Assets\nimport Upload from \"../../assets/upload.png\";\n\n\n\nfunction TaskEditForm() {\n\n  // Set up state variables\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{'value': '', 'label': ''}]);\n  const [taskPriorityChoices, setTaskPriorityChoices] = useState([{'value': '', 'label': ''}]);\n  const [\n    taskCategoryChoices,\n    setTaskCategoryChoices\n  ] = useState([{'value': '', 'label': ''}]);\n  const [taskCategory, setTaskCategory] = useState([]);\n\n  // Fetch profiles from the API\n  useEffect(() => {\n    axios\n      .get(\"/profile-list/\")\n      .then((response) => setUsers(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n    // Fetch task category choices from the API\n    useEffect(() => {\n      const fetchTaskCategoryChoices = async () => {\n        try {\n          const response = await axiosReq.get('/category-choices/');\n          const categoryChoices = response.data.map(category => ({\n            key: category.id,\n            value: category.value,\n            label: category.label\n          }));\n          setTaskCategoryChoices(categoryChoices);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategoryChoices();\n    }, []);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axiosReq.get('/status-choices/');\n          setTaskStatusChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching task_status options:', error);\n        }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n  // Fetch task priority choices from the API\n  useEffect(() => {\n    const fetchTaskPriorityChoices = async () => {\n      try {\n        const response = await axiosReq.get('/priority-choices/');\n          setTaskPriorityChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching priority options:', error);\n        }\n    };\n    fetchTaskPriorityChoices();\n  }, []);\n\n  \n  const [taskData, setTaskData] = useState({\n    title: '',\n    category: '',\n    description: '',\n    image: '',\n    task_status: '',\n    priority: '',\n    owner: '',\n    created_date: '',\n    due_date: null,\n    updated_date: '',\n    completed_date: '',\n    assigned_to: '',\n  });\n\n  const {\n    title,\n    description,\n    image,\n    category,\n    task_status,\n    owner,\n    priority,\n    // due_date,\n    assigned_to,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const {id} = useParams();\n\n  // Populate due date field with existing due date\n  useEffect(() => {\n    setSelectedDate(taskData.due_date);\n  }, [taskData.due_date]);\n\n  // Fetch task data from the API\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/tasks/${id}/`);\n        const {\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner, \n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to, \n          is_owner\n        } = data;\n\n        // Redirect if user is not the owner of the task\n        // otherwise populate the form with the task data\n        is_owner ? setTaskData({\n          title,\n          category,\n          description,\n          image,\n          task_status,\n          priority,\n          owner,\n          due_date,\n          updated_date,\n          owner_comments,\n          assigned_to,\n        }) : history.push('/');\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  // Fetch task categories from the API\n    useEffect(() => {\n      const fetchTaskCategory = async () => {\n        try {\n          const response = await axiosReq.get(`/categories/${category}`);\n          setTaskCategory(response.data.title);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n      \n      fetchTaskCategory();\n    }, []);\n\n  // Handle form input change\n  const handleChange = (event) => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n\n  // Handle date change\n  const handleChangeDate = (event) => {\n    setSelectedDate(event.target.value);\n    setTaskData({\n      ...taskData,\n      due_date: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('category', taskData.category);\n    formData.append('description', description);\n    formData.append('task_status', taskData.task_status);\n    formData.append('priority', taskData.priority);\n    formData.append('owner', owner);\n    formData.append('due_date', selectedDate);\n    console.log('selectedDate', selectedDate);\n    formData.append('assigned_to', assigned_to);\n\n    if (imageInput?.current?.files[0]) {\n      formData.append('image', imageInput.current.files[0]);\n    }\n\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  // Form fields\n  const textFields = (\n    <div className=\"text-center\">\n      \n      {/* Title */}\n      <Form.Group>\n        <Form.Label>Task Title</Form.Label>\n        <Form.Control\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={handleChange}\n    />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Category */}\n      <Form.Group>\n        <Form.Label>Task Category</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"category\"\n          value={category}\n          onChange={handleChange}\n          aria-label=\"task category\"\n        >\n          <option value=\"\">Select task category</option>\n          {taskCategoryChoices.map((categoryChoice) => (\n            <option \n            key={categoryChoice.value} \n            value={categoryChoice.value}>\n              {categoryChoice.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.category?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Due Date */}\n      <Form.Group>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          id=\"dueDateInput\"\n          name=\"due_date\"\n          value={selectedDate}\n          onChange={handleChangeDate}\n        />\n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Description */}\n      <Form.Group>\n        <Form.Label>Task Description</Form.Label>\n        <Form.Control\n            as=\"textarea\"\n            rows={6}\n            name=\"description\"\n            value={description}\n            onChange={handleChange}\n        /> \n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Status */}\n      <Form.Group>\n        <Form.Label>Task Status</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"task_status\"\n          value={task_status}\n          onChange={handleChange}\n          aria-label=\"task status\"\n        >\n          <option value=\"\">Select task status</option>\n          {taskStatusChoices.map((statusChoice) => (\n            <option key={statusChoice.value} value={statusChoice.value}>{statusChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.task_status?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Priority */}\n      <Form.Group>\n        <Form.Label>Task Priority</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"priority\"\n          value={priority}\n          onChange={handleChange}\n          aria-label=\"task priority\"\n        >\n          <option value=\"\">Select task priority</option>\n          {taskPriorityChoices.map((priorityChoice) => (\n            <option key={priorityChoice.value} value={priorityChoice.value}>{priorityChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.priority?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Assigned to */}\n      <Form.Group>\n        <Form.Label>Assigned to</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"assigned_to\"\n          className={appStyles.Input}\n          value={assigned_to}\n          onChange={handleChange}\n          aria-label=\"assigned to\"\n        >\n          <option>Select a user</option>\n          {users.map((user) => (\n            \n            <option key={user.id} value={user.id}>\n              {user.username}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n\n      {errors?.owner?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n    \n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Orange}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Orange}`} type=\"submit\">\n        Update\n      </Button>\n    </div>\n  );\n\n  \n\n  return (\n\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col md={7} lg={7} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n        <Col className=\"py-2 p-0 p-md-2\" md={5} lg={5}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image ? (\n                <>\n                  <figure>\n                    <Image className={appStyles.Image} src={image} rounded />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Orange} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Replace image\n                    </Form.Label>\n                  </div>\n                </>\n              ) : (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset\n                    src={Upload}\n                    message=\"Click or tap to upload an image\"\n                  />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskEditForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}