{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskList.js\",\n  _s = $RefreshSig$();\n// React library & hooks\nimport React, { useEffect, useState } from \"react\";\n\n// Context hooks\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\n// react-router-dom components for page navigation\nimport { useLocation, useParams } from \"react-router-dom\";\n\n// Axios library for HTTP requests\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\n// Utils\nimport { fetchMoreData } from \"../../utils/utils\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// Reusable components\nimport APIConnectionCheck from \"../../components/APIConnectionCheck\";\nimport Asset from \"../../components/Asset\";\nimport ProfileList from \"../profiles/ProfileList\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Task from \"./Task\";\n\n// Bootstrap components\nimport Container from \"react-bootstrap/Container\";\n\n// Styles\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/TaskList.module.css\";\n\n// Assets\nimport NoResults from \"../../assets/no-results.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskList(_ref) {\n  _s();\n  let {\n    message,\n    filter = \"\"\n  } = _ref;\n  // Set up state variables\n  const [tasks, setTasks] = useState({\n    results: []\n  });\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const currentUser = useCurrentUser();\n  const {\n    taskStatus,\n    taskPriority\n  } = useParams();\n  const [query, setQuery] = useState('');\n\n  // Check API connection to tasks\n  APIConnectionCheck('tasks');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        let url = `/tasks/?${filter}`;\n        if (query) {\n          url += `&search=${query}`;\n        }\n        if (taskStatus) {\n          url += `&task_status=${taskStatus}`;\n        }\n        if (taskPriority) {\n          url += `&priority=${taskPriority}`;\n        }\n        const {\n          data\n        } = await axiosReq.get(url);\n        setTasks(data);\n        setHasLoaded(true);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    setHasLoaded(false);\n    // stop results flashing - fetch after 1s delay\n    const timer = setTimeout(() => {\n      fetchTasks();\n    }, 1000);\n\n    // Cleanup Function \n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filter, query, pathname, currentUser, taskStatus, taskPriority]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"h-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 p-0 p-lg-2 MainCol\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileList, {\n        mobile: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fas fa-search ${styles.SearchIcon}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        query: query,\n        setQuery: setQuery,\n        taskCount: tasks.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), hasLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [console.log('tasks: ', tasks), tasks.results.length ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          children: tasks.results.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            ...task,\n            setTasks: setTasks\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)),\n          dataLength: tasks.results.length,\n          loader: /*#__PURE__*/_jsxDEV(Asset, {\n            spinner: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this),\n          hasMore: !!tasks.next,\n          next: () => fetchMoreData(tasks, setTasks)\n        }, tasks.results.map(task => task.id).join(\",\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {\n          className: appStyles.Content,\n          children: /*#__PURE__*/_jsxDEV(Asset, {\n            src: NoResults,\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Container, {\n        className: appStyles.Content,\n        children: /*#__PURE__*/_jsxDEV(Asset, {\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n}\n_s(TaskList, \"p3Z9YqheEqbbNX4fpjJCEy4XKUM=\", false, function () {\n  return [useLocation, useCurrentUser, useParams];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useCurrentUser","useLocation","useParams","axiosReq","fetchMoreData","InfiniteScroll","APIConnectionCheck","Asset","ProfileList","SearchBar","Task","Container","appStyles","styles","NoResults","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_ref","_s","message","filter","tasks","setTasks","results","hasLoaded","setHasLoaded","pathname","currentUser","taskStatus","taskPriority","query","setQuery","fetchTasks","url","data","get","err","timer","setTimeout","clearTimeout","className","children","mobile","fileName","_jsxFileName","lineNumber","columnNumber","SearchIcon","taskCount","count","console","log","length","map","task","id","dataLength","loader","spinner","hasMore","next","join","Content","src","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskList.js"],"sourcesContent":["// React library & hooks\nimport React, { useEffect, useState } from \"react\";\n\n// Context hooks\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\n// react-router-dom components for page navigation\nimport { useLocation, useParams } from \"react-router-dom\";\n\n// Axios library for HTTP requests\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\n// Utils\nimport { fetchMoreData } from \"../../utils/utils\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// Reusable components\nimport APIConnectionCheck from \"../../components/APIConnectionCheck\";\nimport Asset from \"../../components/Asset\";\nimport ProfileList from \"../profiles/ProfileList\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Task from \"./Task\";\n\n\n// Bootstrap components\nimport Container from \"react-bootstrap/Container\";\n\n// Styles\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/TaskList.module.css\";\n\n// Assets\nimport NoResults from \"../../assets/no-results.png\";\n\n\n\nfunction TaskList({ message, filter = \"\" }) {\n  \n  // Set up state variables\n  const [tasks, setTasks] = useState({ results: [] });\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const { pathname } = useLocation();\n  const currentUser = useCurrentUser();\n  const { taskStatus, taskPriority } = useParams();\n  const [query, setQuery] = useState('');\n\n  // Check API connection to tasks\n  APIConnectionCheck('tasks');\n\n  useEffect(() => {\n\n    const fetchTasks = async () => {\n      try {\n        let url = `/tasks/?${filter}`;\n        if (query) {\n          url += `&search=${query}`;\n        }\n        if (taskStatus) {\n          url += `&task_status=${taskStatus}`;\n        }\n        if (taskPriority) {\n          url += `&priority=${taskPriority}`;\n        }\n        const { data } = await axiosReq.get(url);\n        setTasks(data);\n        setHasLoaded(true);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n  \n  setHasLoaded(false);\n  // stop results flashing - fetch after 1s delay\n  const timer = setTimeout(() => {\n    fetchTasks();\n  }, 1000);\n  \n  // Cleanup Function \n  return () => {\n    clearTimeout(timer);\n  };\n  \n}, [filter, query, pathname, currentUser, taskStatus, taskPriority]);\n\n\nreturn (\n  <Container className=\"h-100\">\n      <div className=\"py-2 p-0 p-lg-2 MainCol\">\n        <ProfileList mobile />\n        <i className={`fas fa-search ${styles.SearchIcon}`} />\n        <SearchBar query={query} setQuery={setQuery} taskCount={tasks.count} />\n        {hasLoaded ? (\n          <>\n            {console.log('tasks: ', tasks)}\n            {tasks.results.length ? (\n              <InfiniteScroll\n                key={tasks.results.map(task => task.id).join(\",\")}\n                children={\n                  tasks.results.map((task) => (\n                    <Task key={task.id} {...task} setTasks={setTasks} />\n                ))}\n                dataLength={tasks.results.length}\n                loader={<Asset spinner />}\n                hasMore={!!tasks.next}\n                next={() => fetchMoreData(tasks, setTasks)}\n              />\n              \n            ) : (\n              <Container className={appStyles.Content}>\n                <Asset src={NoResults} message={message} />\n              </Container>\n            )}\n          </>\n        ) : (\n          <Container className={appStyles.Content}>\n            <Asset spinner />\n          </Container>\n        )}\n      </div>\n  </Container>\n  );\n}\n\nexport default TaskList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}