{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskCreateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Upload from \"../../assets/upload.png\";\nimport { Container, Row, Col, Form, Button, Image, Alert } from \"react-bootstrap\";\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Asset from \"../../components/Asset\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport { useRedirect } from '../../hooks/useRedirect';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskCreateForm() {\n  _s();\n  var _errors$title, _errors$category, _errors$description, _errors$description2, _errors$task_status, _errors$priority, _errors$assigned_to;\n  useRedirect('loggedOut');\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [taskCategoryChoices, setTaskCategoryChoices] = useState([{\n    'value': '',\n    'label': ''\n  }]);\n\n  // Fetch profiles from the API\n  useEffect(() => {\n    axios.get(\"/profile-list/\").then(response => setUsers(response.data)).catch(error => {\n      console.error('Error fetching profiles:', error);\n    });\n  }, []);\n\n  // Fetch task category choices from the API\n  useEffect(() => {\n    const fetchTaskCategoryChoices = async () => {\n      try {\n        const response = await axiosReq.get('/category-choices/');\n        const categoryChoices = response.data.map(category => ({\n          key: category.id,\n          value: category.value,\n          label: category.label\n        }));\n        setTaskCategoryChoices(categoryChoices);\n      } catch (error) {\n        console.error('Error fetching category options:', error);\n      }\n    };\n    fetchTaskCategoryChoices();\n  }, []);\n  const [taskData, setTaskData] = useState({\n    title: '',\n    category: '',\n    description: '',\n    image: '',\n    task_status: '',\n    priority: '',\n    owner: '',\n    created_date: '',\n    due_date: '',\n    updated_date: '',\n    completed_date: '',\n    assigned_to: ''\n  });\n  const {\n    title,\n    description,\n    image,\n    category,\n    task_status,\n    owner,\n    priority,\n    due_date,\n    assigned_to\n  } = taskData;\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const handleChange = event => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleChangeImage = event => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0])\n      });\n    }\n  };\n  const handleChangeDate = event => {\n    setSelectedDate(event.target.value);\n    setTaskData({\n      ...taskData,\n      due_date: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    var _imageInput$current;\n    event.preventDefault();\n    // Check if assigned_to is empty\n    if (!assigned_to) {\n      setErrors({\n        assigned_to: ['Please select a user']\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('category', taskData.category);\n    formData.append('description', description);\n    if ((imageInput === null || imageInput === void 0 ? void 0 : (_imageInput$current = imageInput.current) === null || _imageInput$current === void 0 ? void 0 : _imageInput$current.files.length) > 0) {\n      // Check if an image file is selected\n      formData.append('image', imageInput.current.files[0]);\n    }\n    formData.append('task_status', taskData.task_status);\n    formData.append('priority', taskData.priority);\n    formData.append('owner', owner);\n    formData.append('due_date', due_date);\n    formData.append('assigned_to', assigned_to);\n    try {\n      const {\n        data\n      } = await axiosReq.post('/tasks/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      history.push(`/tasks/${data.id}`);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401) {\n        var _err$response2;\n        // console.log(err.response?.data);\n        setErrors((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      }\n    }\n  };\n  const textFields = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"category\",\n        value: category.id,\n        onChange: handleChange,\n        \"aria-label\": \"task category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), taskCategoryChoices.map(categoryChoice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: categoryChoice.value,\n          children: categoryChoice.label\n        }, categoryChoice.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        name: \"due_date\",\n        value: selectedDate,\n        onChange: handleChangeDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 6,\n        name: \"description\",\n        value: description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$description2 = errors.description) === null || _errors$description2 === void 0 ? void 0 : _errors$description2.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"task_status\",\n        value: task_status,\n        onChange: handleChange,\n        \"aria-label\": \"task status\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BACKLOG\",\n          children: \"Backlog\"\n        }, \"BACKLOG\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TODO\",\n          children: \"To Do\"\n        }, \"TODO\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"INPROGRESS\",\n          children: \"In Progress\"\n        }, \"INPROGRESS\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"Completed\"\n        }, \"COMPLETED\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$task_status = errors.task_status) === null || _errors$task_status === void 0 ? void 0 : _errors$task_status.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"priority\",\n        value: priority,\n        onChange: handleChange,\n        \"aria-label\": \"task priority\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PRIORITY1\",\n          children: \"1\"\n        }, \"PRIORITY1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PRIORITY2\",\n          children: \"2\"\n        }, \"PRIORITY2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PRIORITY3\",\n          children: \"3\"\n        }, \"PRIORITY3\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$priority = errors.priority) === null || _errors$priority === void 0 ? void 0 : _errors$priority.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Assigned to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"assigned_to\",\n        className: appStyles.Input,\n        value: assigned_to,\n        onChange: handleChange,\n        \"aria-label\": \"assigned to\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select a user to assign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$assigned_to = errors.assigned_to) === null || _errors$assigned_to === void 0 ? void 0 : _errors$assigned_to.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Orange}`,\n      onClick: () => history.goBack(),\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Orange}`,\n      type: \"submit\",\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        lg: 7,\n        className: \"d-none d-md-block p-0 p-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: appStyles.Content,\n          children: textFields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"py-2 p-0 p-md-2\",\n        md: 5,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: `${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"text-center\",\n            children: [image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  className: appStyles.Image,\n                  src: image,\n                  rounded: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: `${btnStyles.Button} ${btnStyles.Orange} btn`,\n                  htmlFor: \"image-upload\",\n                  children: \"Update image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"d-flex justify-content-center\",\n              htmlFor: \"image-upload\",\n              children: /*#__PURE__*/_jsxDEV(Asset, {\n                src: Upload,\n                message: \"Click or tap to upload an image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"image-upload\",\n              accept: \"image/*\",\n              onChange: handleChangeImage,\n              ref: imageInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-md-none\",\n            children: textFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskCreateForm, \"smc2WzTNEQM+mYnCTEGCuByhRSc=\", false, function () {\n  return [useRedirect, useHistory];\n});\n_c = TaskCreateForm;\nexport default TaskCreateForm;\nvar _c;\n$RefreshReg$(_c, \"TaskCreateForm\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Upload","Container","Row","Col","Form","Button","Image","Alert","styles","appStyles","btnStyles","Asset","useHistory","axios","axiosReq","useRedirect","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskCreateForm","_s","_errors$title","_errors$category","_errors$description","_errors$description2","_errors$task_status","_errors$priority","_errors$assigned_to","errors","setErrors","users","setUsers","selectedDate","setSelectedDate","taskCategoryChoices","setTaskCategoryChoices","get","then","response","data","catch","error","console","fetchTaskCategoryChoices","categoryChoices","map","category","key","id","value","label","taskData","setTaskData","title","description","image","task_status","priority","owner","created_date","due_date","updated_date","completed_date","assigned_to","imageInput","history","handleChange","event","target","name","handleChangeImage","files","length","URL","revokeObjectURL","createObjectURL","handleChangeDate","handleSubmit","_imageInput$current","preventDefault","formData","FormData","append","current","post","headers","push","err","_err$response","status","_err$response2","textFields","className","children","Group","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","message","idx","variant","as","categoryChoice","rows","Input","user","username","Orange","onClick","goBack","onSubmit","md","lg","Content","src","rounded","htmlFor","File","accept","ref","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/pages/tasks/TaskCreateForm.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Upload from \"../../assets/upload.png\";\nimport { Container, Row, Col, Form, Button, Image, Alert } from \"react-bootstrap\"\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Asset from \"../../components/Asset\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport { useRedirect } from '../../hooks/useRedirect';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nfunction TaskCreateForm() {\n  useRedirect('loggedOut');\n\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [\n    taskCategoryChoices,\n    setTaskCategoryChoices\n    ] = useState([{'value': '', 'label': ''}]);\n\n\n  // Fetch profiles from the API\n  useEffect(() => {\n      axios\n        .get(\"/profile-list/\")\n        .then((response) => setUsers(response.data))\n        .catch(\n          (error) => {\n            console.error('Error fetching profiles:', error)\n          });\n    }, []);\n\n    // Fetch task category choices from the API\n    useEffect(() => {\n      const fetchTaskCategoryChoices = async () => {\n        try {\n          const response = await axiosReq.get('/category-choices/');\n          const categoryChoices = response.data.map(category => ({\n            key: category.id,\n            value: category.value,\n            label: category.label\n          }));\n          setTaskCategoryChoices(categoryChoices);\n        } catch (error) {\n          console.error('Error fetching category options:', error);\n        }\n      };\n\n      fetchTaskCategoryChoices();\n    }, []);\n \n\n  const [taskData, setTaskData] = useState({\n    title: '',\n    category: '',\n    description: '',\n    image: '',\n    task_status: '',\n    priority: '',\n    owner: '',\n    created_date: '',\n    due_date: '',\n    updated_date: '',\n    completed_date: '',\n    assigned_to: '',\n  });\n\n  const {\n    title,\n    description,\n    image,\n    category,\n    task_status,\n    owner,\n    priority,\n    due_date,\n    assigned_to,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  const handleChangeDate = (event) => {\n    setSelectedDate(event.target.value);\n    setTaskData({\n      ...taskData,\n      due_date: event.target.value,\n    });\n  };\n\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Check if assigned_to is empty\n    if (!assigned_to) {\n      setErrors({ assigned_to: ['Please select a user'] });\n      return;\n    }\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('category', taskData.category);\n    formData.append('description', description);\n    if (imageInput?.current?.files.length > 0) { // Check if an image file is selected\n      formData.append('image', imageInput.current.files[0]);\n    }\n    formData.append('task_status', taskData.task_status);\n    formData.append('priority', taskData.priority);\n    formData.append('owner', owner);\n    formData.append('due_date', due_date);\n    formData.append('assigned_to', assigned_to);\n  \n    try {\n        const {data} = await axiosReq.post('/tasks/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        history.push(`/tasks/${data.id}`)\n    } catch(err){\n        if (err.response?.status !== 401){\n          // console.log(err.response?.data);\n          setErrors(err.response?.data);\n        }\n    }\n\n  }\n\n\n  const textFields = (\n    <div className=\"text-center\">\n      \n      {/* Title */}\n      <Form.Group>\n        <Form.Label>Task Title</Form.Label>\n        <Form.Control\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Category */}\n      <Form.Group>\n        <Form.Label>Task Category</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"category\"\n          value={category.id}\n          onChange={handleChange}\n          aria-label=\"task category\"\n        >\n          <option value=\"\">Select task category</option>\n          {taskCategoryChoices.map((categoryChoice) => (\n            <option \n            key={categoryChoice.value} \n            value={categoryChoice.value}>\n              {categoryChoice.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.category?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Due Date */}\n      <Form.Group>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n            type=\"date\"\n            name=\"due_date\"\n            value={selectedDate}\n            onChange={handleChangeDate}\n        /> \n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      \n      {/* Description */}\n      <Form.Group>\n        <Form.Label>Task Description</Form.Label>\n        <Form.Control\n            as=\"textarea\"\n            rows={6}\n            name=\"description\"\n            value={description}\n            onChange={handleChange}\n        /> \n      </Form.Group>\n      {errors?.description?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Status */}\n      <Form.Group>\n        <Form.Label>Task Status</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"task_status\"\n          value={task_status}\n          onChange={handleChange}\n          aria-label=\"task status\"\n        >\n          <option value=\"\">Select task status</option>\n          <option key=\"BACKLOG\" value=\"BACKLOG\">Backlog</option>\n          <option key=\"TODO\" value=\"TODO\">To Do</option>\n          <option key=\"INPROGRESS\" value=\"INPROGRESS\">In Progress</option>\n          <option key=\"COMPLETED\" value=\"COMPLETED\">Completed</option>\n        </Form.Control>\n      </Form.Group>\n      {errors?.task_status?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Task Priority */}\n      <Form.Group>\n        <Form.Label>Task Priority</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"priority\"\n          value={priority}\n          onChange={handleChange}\n          aria-label=\"task priority\"\n        >\n          <option value=\"\">Select task priority</option>\n          <option key=\"PRIORITY1\" value=\"PRIORITY1\">1</option>\n          <option key=\"PRIORITY2\" value=\"PRIORITY2\">2</option>\n          <option key=\"PRIORITY3\" value=\"PRIORITY3\">3</option>\n        </Form.Control>\n      </Form.Group>\n      {errors?.priority?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      {/* Assigned to */}\n      <Form.Group>\n        <Form.Label>Assigned to</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"assigned_to\"\n          className={appStyles.Input}\n          value={assigned_to}\n          onChange={handleChange}\n          aria-label=\"assigned to\"\n        >\n          <option>Select a user to assign</option>\n          {users.map((user) => (\n            \n            <option key={user.id} value={user.id}>\n              {user.username}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n\n      {errors?.assigned_to?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n    \n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Orange}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Orange}`} type=\"submit\">\n        create\n      </Button>\n    </div>\n  );\n\n  \n\n  return (\n\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col md={7} lg={7} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n        <Col className=\"py-2 p-0 p-md-2\" md={5} lg={5}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image ? (\n                <>\n                  <figure>\n                    <Image className={appStyles.Image} src={image} rounded />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Orange} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Update image\n                    </Form.Label>\n                  </div>\n                </>\n              ) : (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset\n                    src={Upload}\n                    message=\"Click or tap to upload an image\"\n                  />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskCreateForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}