{"ast":null,"code":"var _s = $RefreshSig$();\n// React hooks\nimport { useEffect } from 'react';\n\n// React router components\nimport { useHistory } from 'react-router';\n\n// Axios library for HTTP requests\nimport axios from 'axios';\n\n// Contexts\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nexport const useRedirect = userAuthStatus => {\n  _s();\n  // Set up state variables\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n\n  // Redirect to user's tasks after login\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post('/dj-rest-auth/token/refresh/');\n        // user IS logged in\n        if (userAuthStatus === 'loggedIn') {\n          const profileId = currentUser.profile_id;\n          history.push(`/profiles/${profileId}`);\n          // history.push('/');\n        }\n      } catch (err) {\n        // user is NOT logged in\n        if (userAuthStatus === 'loggedOut') {\n          history.push('/signin');\n        }\n      }\n    };\n    handleMount();\n  }, [history, userAuthStatus, currentUser]);\n};\n_s(useRedirect, \"aYM8ZFKAyp9JFcFlhpHTTZ47yKc=\", false, function () {\n  return [useHistory, useCurrentUser];\n});","map":{"version":3,"names":["useEffect","useHistory","axios","useCurrentUser","useRedirect","userAuthStatus","_s","history","currentUser","handleMount","post","profileId","profile_id","push","err"],"sources":["/workspace/pp5-tick-off-frontend/src/hooks/useRedirect.js"],"sourcesContent":["// React hooks\nimport { useEffect } from 'react';\n\n// React router components\nimport { useHistory } from 'react-router';\n\n// Axios library for HTTP requests\nimport axios from 'axios';\n\n// Contexts\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\n\nexport const useRedirect = (userAuthStatus) => {\n\n  // Set up state variables\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n\n  // Redirect to user's tasks after login\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post('/dj-rest-auth/token/refresh/');\n        // user IS logged in\n        if (userAuthStatus === 'loggedIn') {\n          const profileId = currentUser.profile_id;\n          history.push(`/profiles/${profileId}`);\n          // history.push('/');\n        }\n      } catch (err) {\n        // user is NOT logged in\n        if (userAuthStatus === 'loggedOut') {\n          history.push('/signin');\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus, currentUser]);\n};"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,cAAc,QAAQ,gCAAgC;AAG/D,OAAO,MAAMC,WAAW,GAAIC,cAAc,IAAK;EAAAC,EAAA;EAE7C;EACA,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAMO,WAAW,GAAGL,cAAc,CAAC,CAAC;;EAEpC;EACAH,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMP,KAAK,CAACQ,IAAI,CAAC,8BAA8B,CAAC;QAChD;QACA,IAAIL,cAAc,KAAK,UAAU,EAAE;UACjC,MAAMM,SAAS,GAAGH,WAAW,CAACI,UAAU;UACxCL,OAAO,CAACM,IAAI,CAAE,aAAYF,SAAU,EAAC,CAAC;UACtC;QACF;MACF,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZ;QACA,IAAIT,cAAc,KAAK,WAAW,EAAE;UAClCE,OAAO,CAACM,IAAI,CAAC,SAAS,CAAC;QACzB;MACF;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,OAAO,EAAEF,cAAc,EAAEG,WAAW,CAAC,CAAC;AAC5C,CAAC;AAACF,EAAA,CA3BWF,WAAW;EAAA,QAGNH,UAAU,EACNE,cAAc;AAAA"},"metadata":{},"sourceType":"module"}