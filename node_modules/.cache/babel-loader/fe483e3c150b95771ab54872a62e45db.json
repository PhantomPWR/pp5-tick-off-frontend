{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusUpdateForm() {\n  _s();\n  var _errors$task_status;\n  // Define the component state\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{\n    value: \"\",\n    label: \"\"\n  }]);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axios.get(\"/status-choices/\");\n        setTaskStatusChoices(response.data);\n      } catch (error) {\n        console.error(\"Error fetching task_status options:\", error);\n      }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n  // Retrieve task data from the API\n  const [taskData, setTaskData] = useState({\n    task_status: \"\",\n    assigned_to: \"\"\n  });\n  const {\n    task_status,\n    assigned_to\n  } = taskData;\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`/tasks/${id}/`);\n        const {\n          task_status,\n          assigned_to\n        } = data;\n        setTaskData({\n          task_status,\n          assigned_to\n        });\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, id]);\n\n  // Handle form field changes\n  const handleChange = event => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"task_status\", taskData.task_status);\n    formData.append(\"assigned_to\", assigned_to);\n    try {\n      await axios.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      var _err$response;\n      // console.log(err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401) {\n        var _err$response2;\n        setErrors((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      }\n    }\n  };\n\n  // Create the text fields JSX\n  const textFields = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"task_status\",\n        value: task_status,\n        onChange: handleChange,\n        \"aria-label\": \"task status\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), taskStatusChoices.map(statusChoice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: statusChoice.value,\n          children: statusChoice.label\n        }, statusChoice.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$task_status = errors.task_status) === null || _errors$task_status === void 0 ? void 0 : _errors$task_status.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Blue}`,\n      onClick: () => history.goBack(),\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Blue}`,\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: textFields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusUpdateForm, \"S151JVGfR/dxHHIa2LKyhjEuglU=\", true);\n_c = StatusUpdateForm;\nexport default StatusUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"StatusUpdateForm\");","map":{"version":3,"names":["StatusUpdateForm","_s","_errors$task_status","errors","setErrors","useState","users","setUsers","taskStatusChoices","setTaskStatusChoices","value","label","useEffect","fetchTaskStatusChoices","response","axios","get","data","error","console","taskData","setTaskData","task_status","assigned_to","history","useHistory","id","useParams","handleMount","err","handleChange","event","target","name","handleSubmit","preventDefault","formData","FormData","append","put","push","_err$response","status","_err$response2","textFields","_jsxDEV","className","children","Form","Group","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","onChange","map","statusChoice","message","idx","Alert","variant","Button","btnStyles","Blue","onClick","goBack","type","onSubmit","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js"],"sourcesContent":["function StatusUpdateForm() {\n  // Define the component state\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{ value: \"\", label: \"\" }]);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axios.get(\"/status-choices/\");\n        setTaskStatusChoices(response.data);\n      } catch (error) {\n        console.error(\"Error fetching task_status options:\", error);\n      }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n  // Retrieve task data from the API\n  const [taskData, setTaskData] = useState({\n    task_status: \"\",\n    assigned_to: \"\",\n  });\n  const { task_status, assigned_to } = taskData;\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axios.get(`/tasks/${id}/`);\n        const { task_status, assigned_to } = data;\n\n        setTaskData({\n          task_status,\n          assigned_to,\n        });\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  // Handle form field changes\n  const handleChange = (event) => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"task_status\", taskData.task_status);\n    formData.append(\"assigned_to\", assigned_to);\n\n    try {\n      await axios.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  // Create the text fields JSX\n  const textFields = (\n    <div className=\"text-center\">\n      {/* Task Status */}\n      <Form.Group>\n        <Form.Label>Task Status</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"task_status\"\n          value={task_status}\n          onChange={handleChange}\n          aria-label=\"task status\"\n        >\n          <option value=\"\">Select task status</option>\n          {taskStatusChoices.map((statusChoice) => (\n            <option key={statusChoice.value} value={statusChoice.value}>\n              {statusChoice.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.task_status?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Button className={`${btnStyles.Button} ${btnStyles.Blue}`} onClick={() => history.goBack()}>\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Blue}`} type=\"submit\">\n        Update\n      </Button>\n    </div>\n  );\n\n  // Render the component\n  return (\n    <Form onSubmit={handleSubmit}>\n      {textFields}\n    </Form>\n  );\n}\n\nexport default StatusUpdateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}