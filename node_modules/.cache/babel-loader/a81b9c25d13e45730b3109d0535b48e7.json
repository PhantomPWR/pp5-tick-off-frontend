{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { Form, Button } from \"react-bootstrap\";\n// import axios from \"axios\";\n// import { axiosRes } from \"../api/axiosDefaults\";\n\n// const status_choices = {\n//   BACKLOG: \"Backlog\",\n//   TODO: \"To Do\",\n//   INPROGRESS: \"In Progress\",\n//   COMPLETED: \"Completed\"\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst status_choices = {\n  BACKLOG: \"Backlog\",\n  TODO: \"To Do\",\n  INPROGRESS: \"In Progress\",\n  COMPLETED: \"Completed\"\n};\n\n// const StatusUpdateForm = ({ taskId, currentStatus, onUpdateStatus }) => {\n//   const [newStatus, setNewStatus] = useState(currentStatus);\n//   const [loading, setLoading] = useState(false);\n//   console.log('currentStatus: ', currentStatus)\n//   console.log('newStatus: ', newStatus)\n\n//   const handleStatusChange = (e) => {\n//     setNewStatus(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       await axios.patch(`/tasks/${taskId}/`, { task_status: newStatus });\n//       onUpdateStatus(newStatus);\n//     } catch (err) {\n//       // Handle error\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <Form onSubmit={handleSubmit}>\n//       <select value={newStatus} onChange={handleStatusChange}>\n//         <option value=\"\">Select task status</option>\n//         {Object.keys(status_choices).map((status) => (\n//           <option key={status} value={status}>\n//             {status_choices[status]}\n//           </option>\n//         ))}\n//       </select>\n\n//       <Button type=\"submit\" disabled={loading} className=\"mt-2 btn-sm\">\n//         Update Status\n//       </Button>\n//     </Form>\n//   );\n// };\n\nconst StatusUpdateForm = _ref => {\n  _s();\n  let {\n    currentStatus,\n    onUpdateStatus\n  } = _ref;\n  const [newStatus, setNewStatus] = useState(currentStatus);\n  const handleStatusChange = e => {\n    setNewStatus(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdateStatus(newStatus);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"status-update-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: newStatus,\n      onChange: handleStatusChange,\n      children: Object.keys(status_choices).map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: status,\n        children: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusUpdateForm, \"dnVqDMJrTue8bDQW8p8eVTz9WQU=\");\n_c = StatusUpdateForm;\nexport default StatusUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"StatusUpdateForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","status_choices","BACKLOG","TODO","INPROGRESS","COMPLETED","StatusUpdateForm","_ref","_s","currentStatus","onUpdateStatus","newStatus","setNewStatus","handleStatusChange","e","target","value","handleSubmit","preventDefault","className","onSubmit","children","onChange","Object","keys","map","status","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { Form, Button } from \"react-bootstrap\";\n// import axios from \"axios\";\n// import { axiosRes } from \"../api/axiosDefaults\";\n\n// const status_choices = {\n//   BACKLOG: \"Backlog\",\n//   TODO: \"To Do\",\n//   INPROGRESS: \"In Progress\",\n//   COMPLETED: \"Completed\"\n// };\nconst status_choices = {\n  BACKLOG: \"Backlog\",\n  TODO: \"To Do\",\n  INPROGRESS: \"In Progress\",\n  COMPLETED: \"Completed\"\n};\n\n// const StatusUpdateForm = ({ taskId, currentStatus, onUpdateStatus }) => {\n//   const [newStatus, setNewStatus] = useState(currentStatus);\n//   const [loading, setLoading] = useState(false);\n//   console.log('currentStatus: ', currentStatus)\n//   console.log('newStatus: ', newStatus)\n\n//   const handleStatusChange = (e) => {\n//     setNewStatus(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       await axios.patch(`/tasks/${taskId}/`, { task_status: newStatus });\n//       onUpdateStatus(newStatus);\n//     } catch (err) {\n//       // Handle error\n//     }\n//     setLoading(false);\n//   };\n\n\n//   return (\n//     <Form onSubmit={handleSubmit}>\n//       <select value={newStatus} onChange={handleStatusChange}>\n//         <option value=\"\">Select task status</option>\n//         {Object.keys(status_choices).map((status) => (\n//           <option key={status} value={status}>\n//             {status_choices[status]}\n//           </option>\n//         ))}\n//       </select>\n\n//       <Button type=\"submit\" disabled={loading} className=\"mt-2 btn-sm\">\n//         Update Status\n//       </Button>\n//     </Form>\n//   );\n// };\n\nconst StatusUpdateForm = ({ currentStatus, onUpdateStatus }) => {\n  const [newStatus, setNewStatus] = useState(currentStatus);\n  \n  const handleStatusChange = (e) => {\n    setNewStatus(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateStatus(newStatus);\n  };\n\n  return (\n    <form className=\"status-update-form\" onSubmit={handleSubmit}>\n      <select value={newStatus} onChange={handleStatusChange}>\n        {Object.keys(status_choices).map((status) => (\n          <option key={status} value={status}>\n            {status}\n          </option>\n        ))}\n      </select>\n      <button type=\"submit\">Update Status</button>\n    </form>\n  );\n};\n\n\nexport default StatusUpdateForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,aAAa;EACzBC,SAAS,EAAE;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAGC,IAAA,IAAuC;EAAAC,EAAA;EAAA,IAAtC;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAAH,IAAA;EACzD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACW,aAAa,CAAC;EAEzD,MAAMI,kBAAkB,GAAIC,CAAC,IAAK;IAChCF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBR,cAAc,CAACC,SAAS,CAAC;EAC3B,CAAC;EAED,oBACEX,OAAA;IAAMmB,SAAS,EAAC,oBAAoB;IAACC,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC1DrB,OAAA;MAAQgB,KAAK,EAAEL,SAAU;MAACW,QAAQ,EAAET,kBAAmB;MAAAQ,QAAA,EACpDE,MAAM,CAACC,IAAI,CAACvB,cAAc,CAAC,CAACwB,GAAG,CAAEC,MAAM,iBACtC1B,OAAA;QAAqBgB,KAAK,EAAEU,MAAO;QAAAL,QAAA,EAChCK;MAAM,GADIA,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEX,CAAC;AAACtB,EAAA,CAxBIF,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}