{"ast":null,"code":"var _jsxFileName = \"/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Import the required components and styles\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusUpdateForm() {\n  _s();\n  var _errors$task_status;\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{\n    'value': '',\n    'label': ''\n  }]);\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axiosReq.get('/status-choices/');\n        setTaskStatusChoices(response.data);\n      } catch (error) {\n        console.error('Error fetching task_status options:', error);\n      }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n  const [taskData, setTaskData] = useState({\n    task_status: '',\n    assigned_to: ''\n  });\n  const {\n    task_status,\n    assigned_to\n  } = taskData;\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const {\n          data\n        } = await axiosReq.get(`/tasks/${id}/`);\n        const {\n          task_status,\n          assigned_to\n        } = data;\n        setTaskData({\n          task_status,\n          assigned_to\n        });\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, id]);\n  const handleChange = event => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('task_status', taskData.task_status);\n    formData.append('assigned_to', assigned_to);\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      var _err$response;\n      // console.log(err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401) {\n        var _err$response2;\n        setErrors((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      }\n    }\n  };\n  const textFields = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"task_status\",\n        value: task_status,\n        onChange: handleChange,\n        \"aria-label\": \"task status\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select task status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), taskStatusChoices.map(statusChoice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: statusChoice.value,\n          children: statusChoice.label\n        }, statusChoice.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), errors === null || errors === void 0 ? void 0 : (_errors$task_status = errors.task_status) === null || _errors$task_status === void 0 ? void 0 : _errors$task_status.map((message, idx) => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: message\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Blue}`,\n      onClick: () => history.goBack(),\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: `${btnStyles.Button} ${btnStyles.Blue}`,\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: textFields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusUpdateForm, \"3w/2vBO23ugDlYZaNs0oQFyidKw=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = StatusUpdateForm;\nexport default StatusUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"StatusUpdateForm\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","axios","Form","Button","Alert","btnStyles","jsxDEV","_jsxDEV","StatusUpdateForm","_s","_errors$task_status","errors","setErrors","users","setUsers","taskStatusChoices","setTaskStatusChoices","fetchTaskStatusChoices","response","axiosReq","get","data","error","console","taskData","setTaskData","task_status","assigned_to","history","id","handleMount","err","handleChange","event","target","name","value","handleSubmit","preventDefault","formData","FormData","append","put","push","_err$response","status","_err$response2","textFields","className","children","Group","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","onChange","map","statusChoice","label","message","idx","variant","Blue","onClick","goBack","type","onSubmit","_c","$RefreshReg$"],"sources":["/workspace/pp5-tick-off-frontend/src/components/StatusUpdateForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Import the required components and styles\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\n\nfunction StatusUpdateForm() {\n\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [taskStatusChoices, setTaskStatusChoices] = useState([{'value': '', 'label': ''}]);\n\n\n  // Fetch task status choices from the API\n  useEffect(() => {\n    const fetchTaskStatusChoices = async () => {\n      try {\n        const response = await axiosReq.get('/status-choices/');\n          setTaskStatusChoices(response.data);\n      } catch (error) {\n          console.error('Error fetching task_status options:', error);\n        }\n    };\n    fetchTaskStatusChoices();\n  }, []);\n\n\n  const [taskData, setTaskData] = useState({\n    task_status: '',\n    assigned_to: '',\n  });\n  const {\n    task_status,\n    assigned_to,\n  } = taskData;\n\n  const history = useHistory();\n  const {id} = useParams();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/tasks/${id}/`);\n        const {\n          task_status,\n          assigned_to, \n        } = data;\n\n        setTaskData({\n          task_status,\n          assigned_to,\n        })\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  const handleChange = (event) => {\n    setTaskData({\n      ...taskData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append('task_status', taskData.task_status);\n    formData.append('assigned_to', assigned_to);\n\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n\n\n  const textFields = (\n    <div className=\"text-center\">\n\n      {/* Task Status */}\n      <Form.Group>\n        <Form.Label>Task Status</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"task_status\"\n          value={task_status}\n          onChange={handleChange}\n          aria-label=\"task status\"\n        >\n          <option value=\"\">Select task status</option>\n          {taskStatusChoices.map((statusChoice) => (\n            <option key={statusChoice.value} value={statusChoice.value}>{statusChoice.label}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {errors?.task_status?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n    \n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Blue}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Blue}`} type=\"submit\">\n        Update\n      </Button>\n    </div>\n  );\n\n  \n\n  return (\n\n    <Form onSubmit={handleSubmit}>\n      {textFields}\n    </Form>\n  );\n}\n\nexport default StatusUpdateForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}